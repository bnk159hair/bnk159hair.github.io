{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/Algorithm/BackJoon/14.14503/",
    "result": {"data":{"cur":{"id":"b18e7bf4-9c98-5ee7-b9ad-2b2fc9fa4699","html":"<br/>\n<h2 id=\"문제-푸는데-필요한-정보\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\" aria-label=\"문제 푸는데 필요한 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 정보</h2>\n<ul>\n<li>\n<p>N X M 크기의 직사각형으로 나타낼 수 있으며, 1 X 1 크기의 정사각형 칸으로 나누어져 있다.</p>\n</li>\n<li>\n<p>각각의 칸은 벽 또는 빈 칸 이다.</p>\n</li>\n<li>\n<p>청소기는 바라보는 방향이 있으며, 동, 서, 남, 북 중 하나이다.</p>\n</li>\n<li>\n<p>방의 각 칸은 좌표 (r, c)로 나타낼 수 있으며 이는 북쪽에서 r+1번째, 서쪽에서 c+1번째 칸을 가리킴</p>\n</li>\n<li>\n<p>처음에 빈 칸은 전부 청소되지 않은 상태이다.</p>\n</li>\n<li>\n<ol>\n<li>현재 칸이 청소되지 않은 경우, 현재 칸을 청소</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>현재 칸의 주변 4칸 중 청소되지 않은 빈칸이 없는 경우</li>\n</ol>\n</li>\n<li>\n<p>2-1. 바라보는 방향을 유치한채로 한칸 후진 가능하면 한칸 후진하고 1번</p>\n</li>\n<li>\n<p>2-2. 바라보는 방향의 뒤쪽칸이 벽이라 후진이 안되면 작동 멈춤</p>\n</li>\n<li>\n<ol start=\"3\">\n<li>현재 주변 4칸 중 청소되지 않은 빈 칸이 있는 경우</li>\n</ol>\n</li>\n<li>\n<p>3-1. 반시계방향으로 90도 회전</p>\n</li>\n<li>\n<p>3-2. 바라보는 뱡향을 기준으로 앞칸이 청소되지않은 빈칸이면 한칸 전진</p>\n</li>\n<li>\n<p>3-3. 1번</p>\n</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"문제-푸는데-필요한-알고리즘\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"문제 푸는데 필요한 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 알고리즘</h2>\n<ul>\n<li>\n<p>위의 내용을 바탕으로 단순 구현</p>\n<br/>\n<br/>\r\n<br/>\n</li>\n</ul>\n<h2 id=\"실수한-내용-및-고찰\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\" aria-label=\"실수한 내용 및 고찰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수한 내용 및 고찰</h2>\n<ul>\n<li>빈칸이 있는 경우 4 방향에 대해 빈칸이 있는지를 판단해야 하는데 알고리즘을 잘못 생각해서 3개까지만 방향을 확인해서 틀렸었다.</li>\n<li>위의 문제를 해결하고 정답보다 개수가 더 나오는 문제가 있었는데 후진 시에는 cnt를 증가시킬 필요가 없음에도 추가시키는 실수를 했었다.</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\r\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\r\n\r\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\r\n\r\nN<span class=\"token punctuation\">,</span> M <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nr<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\ndx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\ndy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n\r\nMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\nstack <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ncnt <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\nstack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nMap<span class=\"token punctuation\">[</span>r<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\r\n<span class=\"token keyword\">while</span> stack<span class=\"token punctuation\">:</span>\r\n    x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cnt <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    check <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\r\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\r\n        ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\r\n        <span class=\"token keyword\">if</span> Map<span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\r\n            check <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\n            <span class=\"token keyword\">break</span>\r\n    <span class=\"token keyword\">if</span> check<span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 빈칸이 있는 경우</span>\r\n        <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 빈칸 있는 곳 나오면 이동</span>\r\n            d <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>d<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span>\r\n            nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span>\r\n            ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>d<span class=\"token punctuation\">]</span>\r\n            <span class=\"token keyword\">if</span> Map<span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\r\n                stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nx<span class=\"token punctuation\">,</span> ny<span class=\"token punctuation\">,</span> cnt<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n                Map<span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\r\n                <span class=\"token keyword\">break</span>\r\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 빈칸이 없는 경우</span>\r\n        nx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n        ny <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n        <span class=\"token keyword\">if</span> Map<span class=\"token punctuation\">[</span>nx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>ny<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># 후진 가능?</span>\r\n            stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>nx<span class=\"token punctuation\">,</span> ny<span class=\"token punctuation\">,</span> cnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">break</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">)</span>\r\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\">문제 푸는데 필요한 정보</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">문제 푸는데 필요한 알고리즘</a></li>\n<li><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\">실수한 내용 및 고찰</a></li>\n<li><a href=\"#%EC%BD%94%EB%93%9C\">코드</a></li>\n</ul>\n</div>","excerpt":"문제 푸는데 필요한 정보 N X M 크기의 직사각형으로 나타낼 수 있으며, 1 X 1 크기의 정사각형 칸으로 나누어져 있다. 각각의 칸은 벽 또는 빈 칸 이다. 청소기는 바라보는 방향이 있으며, 동, 서, 남, 북 중 하나이다. 방의 각 칸은 좌표 (r, c)로 나타낼 수 있으며 이는 북쪽에서 r+1번째, 서쪽에서 c+1번째 칸을 가리킴 처음에 빈 칸은 전부 청소되지 않은 상태이다. 현재 칸이 청소되지 않은 경우, 현재 칸을 청소 현재 칸의 주변 4칸 중 청소되지 않은 빈칸이 없는 경우 2-1. 바라보는 방향을 유치한채로 한칸 후진 가능하면 한칸 후진하고 1번 2-2. 바라보는 방향의 뒤쪽칸이 벽이라 후진이 안되면 작동 멈춤 현재 주변 4칸 중 청소되지 않은 빈 칸이 있는 경우 3-1. 반시계방향으로 90도 회전 3-2. 바라보는 뱡향을 기준으로 앞칸이 청소되지않은 빈칸이면 한칸 전진 3-3. 1번 문제 푸는데 필요한 알고리즘 위의 내용을 바탕으로 단순 구현 실수한 내용 및 고찰 …","frontmatter":{"date":"August 21, 2023","title":"백준 14503, 로봇 청소기","categories":"알고리즘","author":"하이영","emoji":"🔮"},"fields":{"slug":"/Algorithm/BackJoon/14.14503/"}},"next":{"id":"47038c77-926a-58c5-8475-9d23b9d5febd","html":"<br/>\n<h2 id=\"문제-푸는데-필요한-정보\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\" aria-label=\"문제 푸는데 필요한 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 정보</h2>\n<ul>\n<li>\n<p>8개의 톱니를 가진 톱니바퀴 4개가 일렬로 놓여져있음</p>\n</li>\n<li>\n<p>톱니는 N극 또는 S극 중 하나</p>\n</li>\n<li>\n<p>가장 왼쪽부터 오른쪽 톱니바뀌까지 1~4번</p>\n</li>\n<li>\n<p>회전은 한칸을 기준, 시계방향, 반시계방향 존재</p>\n</li>\n<li>\n<p>회전 후 맞닿은 극에 따라 다른 톱니가 회전할 수 있음</p>\n</li>\n<li>\n<p>맛닿은 톱니의 극이 다르다면 먼저 회전한 톱니의 방향과 반대방향으로 회전</p>\n</li>\n<li>\n<p>1~4번째 줄은 각 n번째 톱니바퀴의 상태</p>\n</li>\n<li>\n<p>상태는 8개의 정수</p>\n</li>\n<li>\n<p>12시 방향부터 시계 방향대로 순서가 주어짐</p>\n</li>\n<li>\n<p>N극은 0, S극은 1</p>\n</li>\n<li>\n<p>다섯째 줄은 회전횟수 K가 주어짐</p>\n</li>\n<li>\n<p>다음 k개 줄에는 회전시킬 톱니 번호와 방향이 주어짐</p>\n</li>\n<li>\n<p>방향이 1인 경우 시계 방향, -1인 경우는 반시계 방향</p>\n</li>\n<li>\n<p>K는 1부터 100</p>\n</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"문제-푸는데-필요한-알고리즘\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"문제 푸는데 필요한 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 알고리즘</h2>\n<ul>\n<li>\n<p>각각의 톱니바퀴를 deque으로 설정</p>\n</li>\n<li>\n<p>0번째를 12시방향으로 설정해서 시계방향으로 값 저장</p>\n</li>\n<li>\n<p>시계방향으로 회전할 경우 pop해서, appendleft 실행</p>\n</li>\n<li>\n<p>반시계방향으로 회전할 경우 popleft해서 append 실행</p>\n</li>\n<li>\n<p>회전전 해당 톱니바퀴에서 왼쪽으로 검사 시행, 이 때 이전 톱니의 회전 방향 기억</p>\n</li>\n<li>\n<p>왼쪽 검사 후 오른쪽으로 검사</p>\n</li>\n<li>\n<p>1번의 2번째 인덱스와 2번의 6번째 인덱스가 맞닿음</p>\n</li>\n<li>\n<p>2번의 2번째 인덱스와 3번의 6번째 인덱스가 맞닿음</p>\n</li>\n<li>\n<p>3번의 2번째 인덱스와 4번의 6번째 인덱스가 맞닿음</p>\n</li>\n<li>\n<p>맞닿은 값들이 다른 경우 반대방향으로 회전</p>\n</li>\n<li>\n<p>회전 후 맞닿은 값을 확인하는 것이 아닌 회전 하기 전 다른 값이면 회전 시 반대 방향으로 회전하기에</p>\n</li>\n<li>\n<p>재귀 호출로 해결</p>\n<br/>\n<br/>\r\n<br/>\n</li>\n</ul>\n<h2 id=\"실수한-내용-및-고찰\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\" aria-label=\"실수한 내용 및 고찰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수한 내용 및 고찰</h2>\n<ul>\n<li>처음에 문제의 예시를 제대로 읽지 않고 마음대로 해석해서 시간낭비를 했다.\n<ul>\n<li>회전 후 맞닿은 극이 아니라, 회전하기전 맞닿은 극을 확인하고 다를 경우, 회전시 반대로 회전하는 것이다.</li>\n</ul>\n</li>\n<li>인덱스를 적은 부분에서 사소한 변수 실수를 한다. 이러한 부분을 좀 더 조심해야겠다.</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\r\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\r\n\r\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\r\n\r\ntopni <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        topni<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span>\r\n\r\nK <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\norder <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># num에 -1 해서 전달해야함</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">dir</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\r\n        topni<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>appendleft<span class=\"token punctuation\">(</span>topni<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n        topni<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>topni<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">propagateleft</span><span class=\"token punctuation\">(</span>nth<span class=\"token punctuation\">,</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># nth에 -1해서 전달해야함</span>\r\n    <span class=\"token keyword\">if</span> nth <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">return</span>\r\n    <span class=\"token keyword\">if</span> topni<span class=\"token punctuation\">[</span>nth<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> topni<span class=\"token punctuation\">[</span>nth<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n        propagateleft<span class=\"token punctuation\">(</span>nth<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span>\r\n        rotate<span class=\"token punctuation\">(</span>nth<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">propagateright</span><span class=\"token punctuation\">(</span>nth<span class=\"token punctuation\">,</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">if</span> nth <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">return</span>\r\n    <span class=\"token keyword\">if</span> topni<span class=\"token punctuation\">[</span>nth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> topni<span class=\"token punctuation\">[</span>nth<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n        propagateright<span class=\"token punctuation\">(</span>nth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span>\r\n        rotate<span class=\"token punctuation\">(</span>nth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">calsum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    result <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\r\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">if</span> topni<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\r\n            result <span class=\"token operator\">+=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> result\r\n\r\n\r\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    num<span class=\"token punctuation\">,</span> <span class=\"token builtin\">dir</span> <span class=\"token operator\">=</span> order<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\r\n\r\n    propagateleft<span class=\"token punctuation\">(</span>num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span>\r\n    propagateright<span class=\"token punctuation\">(</span>num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span>\r\n    rotate<span class=\"token punctuation\">(</span>num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">dir</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>calsum<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\">문제 푸는데 필요한 정보</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">문제 푸는데 필요한 알고리즘</a></li>\n<li><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\">실수한 내용 및 고찰</a></li>\n<li><a href=\"#%EC%BD%94%EB%93%9C\">코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"August 16, 2023","title":"백준 14891, 톱니바퀴","categories":"알고리즘","author":"하이영","emoji":"🔮"},"fields":{"slug":"/Algorithm/BackJoon/13.14891/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://bnk159hair.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/Algorithm/BackJoon/14.14503/","nextSlug":"/Algorithm/BackJoon/13.14891/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}