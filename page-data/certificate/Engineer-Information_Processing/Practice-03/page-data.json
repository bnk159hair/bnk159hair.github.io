{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/certificate/Engineer-Information_Processing/Practice-03/",
    "result": {"data":{"cur":{"id":"1d2342d1-c93c-55ad-a0f7-056f2f5cbd46","html":"<h3 id=\"간단한-개념-및-요약본\" style=\"position:relative;\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%9A%94%EC%95%BD%EB%B3%B8\" aria-label=\"간단한 개념 및 요약본 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간단한 개념 및 요약본</h3>\n<br/>\r\n<br/>\n<ul>\n<li>\n<p><strong>프로토콜의 3요소</strong> - 구문 / 의미 / 타이밍</p>\n</li>\n<li>\n<p><strong>선점형 스케줄링 알고리즘 유형</strong> - 라운드 로빈 / SRT / 다단계 큐 / 다단계 피드백 큐</p>\n</li>\n<li>\n<p><strong>비선점형 스케줄링 알고리즘 유형</strong> - 우선순위 / 기한부 / FCFS / SJF / HRN</p>\n</li>\n<li>\n<p><strong>트랜잭션 특성</strong> - 원자성 / 일관성 / 격리성 / 영속성</p>\n</li>\n<li>\n<p><strong>해시 암호화 알고리즘의 종류</strong> - MD5 / SHA-1 / SHA-256 / HAS-160</p>\n</li>\n<li>\n<p><strong>결합도 유형 순서(품질 낮음에서 높음으로)</strong> - 내용 > 공통 > 외부 > 제어 > 스템프 > 자료</p>\n</li>\n<li>\n<p><strong>응집도 유형 순서(품질 낮음에서 높음으로)</strong> - 우연적 > 논리적 > 시간적 > 절차적 > 통신적 > 순차적 > 기능적</p>\n</li>\n<li>\n<p><strong>반정규화의 주요 기법</strong> - 테이블 병합 / 테이블 분할 / 중복 테이블 추가 / 컬럼 중복화 / 중복 관계 추가</p>\n</li>\n<li>\n<p><strong>OSI 7셰층의 특징</strong> - 응용 계층 / 표현 계층 / 세션 계층 / 전송 계층 / 네트워크 계층 / 데이터링크 계층 / 물리 계층</p>\n</li>\n<li>\n<p><strong>애플리케이션 성능 측정 지표</strong> - 처리량 / 응답시간 / 경과시간 / 자원 사용률</p>\n</li>\n<li>\n<p><strong>비즈니스 연속성 계획(BCP)의 주요 용어</strong> - BIA / RTO / RPO / DRP / DRS</p>\n</li>\n<li>\n<p><strong>소프트웨어 개발방법론 종류</strong> - 구조적 방법론 / 정보공학 방법론 / 객체지향 방법론 / 컴포넌트 기반 방법론 / 애자일 방법론 / 제품 계열 방법론</p>\n</li>\n<li>\n<p><strong>TCL(트랜잭션 제어언어) 명령어</strong> - 커밋 / 롤백 / 체크포인트</p>\n</li>\n<li>\n<p><strong>IPSec(IP 계층(3계층)에서 인증, 기밀성 보장하는 IP보안 프로토콜)의 주요 프로토콜</strong> -\r\n인증(AH) 프로토콜 / 암호화(ESP) 프로토콜 / 키(KEY) 관리 프로토콜</p>\n</li>\n<li>\n<p><strong>디자인 패턴 중 행위 패턴</strong> - Mediator / Interpreter / Iterator / Template Method / Observer / State / Visitor / Command / Strategy / Memento / Chain of Responsibility</p>\n</li>\n<li>\n<p><strong>디자인 패턴 중 구조 패턴</strong> - Bridge / Decorator / Facade / Flyweight / Proxy / Composite / Adaptor</p>\n</li>\n<li>\n<p><strong>안드로이드 특징</strong> - 리눅스 기반 / 자바와 코틀린 언어 / 런타임 라이브러리 / 안드로이드 소프트웨어 개발 키트(SDK)</p>\n</li>\n<li>\n<p><strong>입력 데이터 검증 및 표현에 대한 취약점</strong> - XSS / 사이트간 요청 위조 / SQL 삽입(Injection)</p>\n</li>\n<li>\n<p><strong>UI 설계 원칙</strong> - 직관성 / 유효성 / 학습성 / 유연성</p>\n</li>\n<li>\n<p><strong>UI 품질 요구 사항</strong> - 신뢰성 / 성숙성 / 고장 허용성 / 회복성</p>\n</li>\n<li>\n<p><strong>데이터 모델링의 절차</strong> - 개념적 데이터 모델 / 논리적 데이터 모델 / 물리적 데이터 모델</p>\n</li>\n<li>\n<p><strong>형상관리</strong> - 형상 식별 / 형상 통제 / 형상 감사 / 형상 기록</p>\n</li>\n<li>\n<p><strong>리팩토링의 목적</strong> - 유지보수성 향상 / 유연한 시스템 / 생산성 향상 / 품질 향상</p>\n</li>\n<li>\n<p><strong>OSPF의 특징</strong> - 다익스트라 알고리즘 사용 / 라우팅 메트릭 지정 / AS 분할 사용 / 홉 카운트 무제한</p>\n</li>\n<li>\n<p><strong>순수 관계 연산자</strong> - 셀렉트(σ) / 프로젝트(π) / 조인(⋈) / 디비전(÷)</p>\n</li>\n<li>\n<p><strong>식별자 표기법</strong> - 카멜 표기법 / 파스칼 표기법 / 스네이크 표기법 / 헝가리안 표기법</p>\n</li>\n<li>\n<p><strong>블랙박스 테스트 유형</strong> - 동등분할 테스트 / 경곗값 분석 테스트 / 결정 테이블 테스트 / 상태 전이 테스트 / 유스케이스 / 분류 트리 테스트 / 페어와이즈 테스트 / 원인-결과 그래프 테스트 / 비교 테스트</p>\n</li>\n<li>\n<p><strong>화이트박스 테스트 유형</strong> - 구문 커버리지 / 결정 커버리지 / 조건 커버리지 / 조건-결정 커버리지 / 변경 조건-결정 커버리지 / 다중 조건 커버리지 / 기본 경로 커버리지 / 제어 흐름 테스트 / 데이터 흐름 테스트</p>\n</li>\n<li>\n<p><strong>EAI의 구축 유형</strong> - 포인트 투 포인트 / 허브 앤 스포크 / 메시지 버스 / 하이브리드</p>\n</li>\n<li>\n<p><strong>EAI 구성요소</strong> - EAI 플랫폼 / 어댑터 / 브로커 / 메시지 큐 / 비즈니스 워크플로우</p>\n</li>\n<li>\n<p><strong>디자인 패턴의 유형</strong> - 목적(생성, 구조, 행위) / 범위(클래스, 객체)</p>\n</li>\n<li>\n<p><strong>회복 기법의 종류</strong> - 로그 기반 회복기법(지연 갱신 회복 기법, 즉각 갱신 회복 기법) / 체크 포인트 회복 기법 / 그림자 페이징 회복 기법</p>\n</li>\n<li>\n<p><strong>네트워크 공격 기법</strong> - 스니핑 / 네트워크 스캐너, 스니퍼 / 패스워드 크래킹 / IP 스푸핑 / ARP 스푸핑 / ICMP Redirect 공격 / 트로이 목마</p>\n</li>\n<li>\n<p><strong>NAT 유형</strong> - Static NAT / Dynamic NAT</p>\n</li>\n<li>\n<p><strong>블록체인 합의 알고리즘</strong> - PoW(Proof of Work) / PoS(Proof of Stake)</p>\n</li>\n<li>\n<p><strong>하둡의 종류</strong> - 하둡 분산 파일 시스템 / 맵리듀스</p>\n</li>\n<li>\n<p><strong>데이터베이스 이상 현상</strong> - 삽입 이상 / 삭제 이상 / 갱신 이상</p>\n</li>\n<li>\n<p><strong>프로세스 상태 전이</strong> - 생성 상태 / 준비 상태 / 실행 상태 / 대기 상태 / 완료 상태</p>\n</li>\n<li>\n<p><strong>테스트 오라클의 유형</strong> - 참 오라클 / 샘플링 오라클 / 휴리스틱 오라클 / 일관성 검사 오라클</p>\n</li>\n<li>\n<p><strong>SW 개발 보안의 3대 요소</strong> - 기밀성 / 무결성 / 가용성</p>\n</li>\n<li>\n<p><strong>네트워크 계층(3계층) 프로토콜 유형</strong> - IP / ARP / RARP / ICMP / IGMP / 라우팅 프로토콜</p>\n</li>\n<li>\n<p><strong>DB 설계 절차</strong> - 요구사항 분석 / 개념적 설계 / 논리적 설계 / 물리적 설계 / 구현</p>\n</li>\n<li>\n<p><strong>요구사항의 분류</strong> - 개념 / 도출 방법 / 특성 / 사례</p>\n</li>\n<li>\n<p><strong>인수 테스트 종류</strong> - 단위 테스트 / 통합 테스트 / 시스템 테스트 / 인수 테스트 / 알파 테스트 / 베타 테스트 / 회귀 테스트</p>\n</li>\n<li>\n<p><strong>IPC 기법</strong> - 메시지 큐 / 공유 메모리 / 소켓 / 세마포어</p>\n</li>\n<li>\n<p><strong>데이터 모델 구성요소</strong> - 연산 / 구조 / 제약조건</p>\n</li>\n<li>\n<p><strong>서버 접근통제 유형</strong> - 임의적 접근 통제 / 강제적 접근 통제 / 역할 기반 접근 통제</p>\n</li>\n<li>\n<p><strong>리뷰의 유형</strong> - 관리 리뷰 / 기술 리뷰 / 동료 검토 / 워크 스루 / 인스펙션</p>\n</li>\n<li>\n<p><strong>데이터베이스 정규화 단계</strong></p>\n<ul>\n<li>1정규형(1NF) : 원자값으로 구성</li>\n<li>2정규형(2NF) : 부분 함수 종속 제거(완전 함수적 종속 관계)</li>\n<li>3정규형(3NF) : 이행함수 종속 제거</li>\n<li>보이스-코드 정규형(BCNF) : 결정자 함수이면서 후보 키가 아닌 것 제거</li>\n<li>4정규형(4NF) : 다치(다중 값) 종속성 제거</li>\n<li>5정규형(5NF) : 조인 종속성 제거</li>\n</ul>\n</li>\n<li>\n<p><strong>데이터 흐름도 구성요소</strong> - 처리기 / 데이트 흐름 / 데이터 저장소 / 단말</p>\n</li>\n<li>\n<p><strong>모델링 절차</strong> - 요구사항 분석 > 개념 모델링 > 논리 모델링 > 물리 모델링</p>\n</li>\n<li>\n<p><strong>ISO/IEC9126 소프트웨어 품질 특성</strong> - 기능성 / 신뢰성 / 사용성 / 효율성 / 유지보수성 / 이식성</p>\n</li>\n<li>\n<p><strong>네트워크 접근 제어의 솔루션</strong> - 방화벽 / 웹 방화벽 / 침입 탐지 시스템 / 침입 방지 시스템 / 네트워크 접근 제어 / 무선 침입 방지 시스템 / 통합 보안 시스템 / 가상사설망</p>\n</li>\n<li>\n<p><strong>절차형 SQL</strong> - 프로시저 / 사용자 정의함수 / 트리거</p>\n</li>\n<li>\n<p><strong>라우팅 알고리즘 유형</strong> - 거리 벡터 알고리즘 / 링크 상태 알고리즘</p>\n</li>\n<li>\n<p><strong>객체지향 설계 원칙</strong> - 단일 책임의 원칙 / 개방 폐쇄 원칙 / 라스코프 치환의 원칙 / 인터페이스 분리의 원칙 / 의존성 역전의 원칙</p>\n</li>\n<li>\n<p><strong>병행 제어 기법</strong> 로킹 / 낙관적 검증 / 타임 스템프 순서 / 다중버전 동시성 제어</p>\n</li>\n<li>\n<p><strong>대칭 키 암호화 알고리즘 종류</strong> - DES / SEED / AES / ARIA / IDEA / LFSR</p>\n</li>\n<li>\n<p><strong>집합 연산자</strong> - UNION / UNION ALL / INTERSECT / MINUS</p>\n</li>\n<li>\n<p><strong>대표적인 라우팅 프로토콜</strong> - RIP / OSPF / BGP</p>\n</li>\n<li>\n<p><strong>해킹 공격용 도구</strong> - 루트킷 / 크라임웨어</p>\n</li>\n<li>\n<p><strong>리스트 종류</strong> - 선형 리스트(배열) / 연결 리스트(노드)</p>\n</li>\n<li>\n<p><strong>분석 자동화 도구(CASE 도구) 유형</strong> - 상위 CASE / 하위 CASE</p>\n</li>\n<li>\n<p><strong>HIPO차트의 종류</strong> - 가시적 도표 / 총체적 도표 / 세부적 도표</p>\n</li>\n<li>\n<p><strong>데이터베이스 무결성의 종류</strong> - 개체 무결성 / 참조 무결성 / 속성 무결성 / 사용자 무결성 / 키 무결성</p>\n</li>\n<li>\n<p><strong>커널 유형</strong> - 마이크로 커널 / 모놀리식 커널</p>\n</li>\n<li>\n<p><strong>병행 제어 미보장 시 문제점</strong> - 갱신 손실 / 현황 파악 오류 / 모순성 / 연쇄복귀</p>\n</li>\n<li>\n<p><strong>패스워드 크래킹의 유형</strong> - 사전 대입 공격 / 무차별 대입 공격 / 패스워드 하이브리드 공격 / 레인보우 테이블</p>\n</li>\n<li>\n<p><strong>공통 모듈 테스트의 종류</strong> - 화이트박스 테스트 / 메서드 기반 테스트 / 화면 기반 테스트 / 테스트 드라이버</p>\n</li>\n<li>\n<p><strong>데이터베이스 암호화 기법</strong> - API 방식 / Plug-in방식 / TDE 방식 / Hybrid 방식</p>\n</li>\n<li>\n<p><strong>메모리 반입 기법</strong> - 예상 반입 기법 / 요구 반입 기법</p>\n</li>\n<li>\n<p><strong>애플리케이션에 대한 DDos 공격</strong> - Slowloris / RUDY / Slow HTTP rEAD DoS</p>\n</li>\n<li>\n<p><strong>소프트웨어 아키텍쳐 뷰 종류</strong> - 유스케이스 뷰 / 논리 뷰 / 프로세스 뷰 / 구현 뷰 / 배포 뷰</p>\n</li>\n<li>\n<p><strong>소프트웨어 아키텍처 비용 평가 모델 종류</strong> - SAAM / ATAM / CBAM / ADR / ARID</p>\n</li>\n<li>\n<p><strong>소프트웨어 아키텍처 패턴 유형</strong> - 계층화 패턴 / 클라이언트-서버 패턴 / 파이프-필터 패턴 / 모델-뷰-컨트롤러 패턴 / 브로커 패턴</p>\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\n</li>\n</ul>\n<h3 id=\"출처--httpschoboparktistorycom193\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98--httpschoboparktistorycom193\" aria-label=\"출처  httpschoboparktistorycom193 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처 : <a href=\"https://chobopark.tistory.com/193\">https://chobopark.tistory.com/193</a></h3>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EA%B0%9C%EB%85%90-%EB%B0%8F-%EC%9A%94%EC%95%BD%EB%B3%B8\">간단한 개념 및 요약본</a></li>\n<li><a href=\"#%EC%B6%9C%EC%B2%98--httpschoboparktistorycom193\">출처 : https://chobopark.tistory.com/193</a></li>\n</ul>\n</div>","excerpt":"간단한 개념 및 요약본 프로토콜의 3요소 - 구문 / 의미 / 타이밍 선점형 스케줄링 알고리즘 유형 - 라운드 로빈 / SRT / 다단계 큐 / 다단계 피드백 큐 비선점형 스케줄링 알고리즘 유형 - 우선순위 / 기한부 / FCFS / SJF / HRN 트랜잭션 특성 - 원자성 / 일관성 / 격리성 / 영속성 해시 암호화 알고리즘의 종류 - MD5 / SHA-1 / SHA-256 / HAS-160 결합도 유형 순서(품질 낮음에서 높음으로) - 내용 > 공통 > 외부 > 제어 > 스템프 > 자료 응집도 유형 순서(품질 낮음에서 높음으로) - 우연적 > 논리적 > 시간적 > 절차적 > 통신적 > 순차적 > 기능적 반정규화의 주요 기법 - 테이블 병합 / 테이블 분할 / 중복 테이블 추가 / 컬럼 중복화 / 중복 관계 추가 OSI 7셰층의 특징 - 응용 계층 / 표현 계층 / 세션 계층 / 전송 계층 / 네트워크 계층 / 데이터링크 계층 / 물리 계층 애플리케이션 성능 측정 지표 - 처리…","frontmatter":{"date":"July 20, 2023","title":"정보처리기사 실기 족보 3탄 공부","categories":"자격증","author":"하이영","emoji":"🌍"},"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-03/"}},"next":{"id":"5733839c-5075-5b25-8d8e-b9576eedb069","html":"<p>오라클 클라우드로 데이터베이스 서버를 구축하면서<br>\n포트번호 관련 이슈들이 있었는데 해당 사이트를 통해\r\n손쉽게 포트번호가 열려있는지 확인할 수 있다.</p>\n<p><a href=\"https://www.yougetsignal.com/tools/open-ports/\">포트번호가 열려있는지 확인할 수 있는 사이트</a></p>","frontmatter":{"date":"July 19, 2023","title":"포트가 열려있는지 확인할 수 있는 사이트","categories":"개발정보","author":"하이영","emoji":"🌍"},"fields":{"slug":"/Development/Network/check-port/"}},"prev":{"id":"29b44aba-bc46-55d1-bd89-1d49515bfbb9","html":"<h1 id=\"백준-9251-lcs\" style=\"position:relative;\"><a href=\"#%EB%B0%B1%EC%A4%80-9251-lcs\" aria-label=\"백준 9251 lcs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>백준 9251, LCS</h1>\n<br/>\n<h2 id=\"문제-푸는데-필요한-정보\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\" aria-label=\"문제 푸는데 필요한 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 정보</h2>\n<ul>\n<li>LCS(Longest Common Subsequence, 최장 공통 부분 수열)문제는 두 수열이 주어졌을 때, 모두의 부분 수열이 되는 수열 중 가장 긴 것을 찾는 문제이다.</li>\n<li>예를 들어, ACAYKP와 CAPCAK의 LCS는 ACAK가 된다.</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"문제-푸는데-필요한-알고리즘\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"문제 푸는데 필요한 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 알고리즘</h2>\n<ul>\n<li>점화식을 세움으로써 해결할 수 있기에 해당 문제는 DP로 접근해야 한다.</li>\n<li>DP 테이블은 첫번째 (문자열의 길이+1) X (두번째 문자열의 길이+1) 크기의 2차원 배열이어야 한다.</li>\n<li>DP 테이블의 현재 값[x][y]이 정해지는 경우의 수는 총 2개이다.\n<ol>\n<li>두 문자열의 각각 위치[x][y]의 문자값이 같은 경우</li>\n</ol>\n<ul>\n<li>이 두 문자는 아직 비교가 안되어야하기에<br>\n각 문자열의 -1 위치[x-1][y-1]에 대한 테이블 값에 +1을 한다.</li>\n</ul>\n<ol start=\"2\">\n<li>같지 않은 경우</li>\n</ol>\n<ul>\n<li>현재 문자가 다른 문자열의 이전 문자값([x-1][y] or [x][y-1])과 비교된 값 2개중 큰 값으로 정한다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>예를 들어 문자열이 ABCD와 ACBD가 있다고 가정하면 아래와 같이 배열이 완성 된다.</li>\n<li>ABCD, ACBD</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    [0, 0, 0, 0, 0]\r\n    [0, 1, 1, 1, 1]\r\n    [0, 1, 1, 2, 2]\r\n    [0, 1, 2, 2, 2]\r\n    [0, 1, 2, 2, 3]</code></pre></div>\n  <br/>\r\n  <br/>\n<h2 id=\"실수한-내용-및-고찰\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\" aria-label=\"실수한 내용 및 고찰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수한 내용 및 고찰</h2>\n<ul>\n<li>1년 전에 풀었던 문제를 다시 풀었지만 풀이를 보았던 저번과는 달리 직접 풀게 되어 뿌듯하다.</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\r\n\r\n<span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\r\nA <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 위의 시스템 함수로 인해 마지막에 개행 문자가 들어가기에</span>\r\nB <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n\r\ndp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">if</span> A<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> B<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dp<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n</code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\">문제 푸는데 필요한 정보</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">문제 푸는데 필요한 알고리즘</a></li>\n<li><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\">실수한 내용 및 고찰</a></li>\n<li><a href=\"#%EC%BD%94%EB%93%9C\">코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"July 27, 2023","title":"백준 9251, LCS","categories":"알고리즘","author":"하이영","emoji":"🔮"},"fields":{"slug":"/Algorithm/BackJoon/02.9251/"}},"site":{"siteMetadata":{"siteUrl":"https://bnk159hair.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/certificate/Engineer-Information_Processing/Practice-03/","nextSlug":"/Development/Network/check-port/","prevSlug":"/Algorithm/BackJoon/02.9251/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}