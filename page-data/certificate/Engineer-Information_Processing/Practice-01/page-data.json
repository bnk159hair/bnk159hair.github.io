{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/certificate/Engineer-Information_Processing/Practice-01/",
    "result": {"data":{"cur":{"id":"dd771358-7b88-5d59-95ca-9bcefe0fa394","html":"<h4 id=\"살충제-패러독스-\" style=\"position:relative;\"><a href=\"#%EC%82%B4%EC%B6%A9%EC%A0%9C-%ED%8C%A8%EB%9F%AC%EB%8F%85%EC%8A%A4-\" aria-label=\"살충제 패러독스  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>살충제 패러독스 :</h4>\n<p>동일한 테스트 케이스에 의한 반복적 테스트는 새로운 버그를 찾지 못한다는 테스트의 원리</p>\n<br/>\r\n<br/>\n<h4 id=\"데이터-마이닝-\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A7%88%EC%9D%B4%EB%8B%9D-\" aria-label=\"데이터 마이닝  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 마이닝 :</h4>\n<p>대규모로 저장된 데이터 안에서 체계적이고 자동적으로 통계적 규칙이나 패턴을 찾아내는 기술</p>\n<br/>\r\n<br/>\n<h4 id=\"프로토콜의-3요소-\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%9D%98-3%EC%9A%94%EC%86%8C-\" aria-label=\"프로토콜의 3요소  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토콜의 3요소 :</h4>\n<ol>\n<li>구문(Syntax) - 시스템 간의 정보 전송을 위한 데이터 형식, 코딩, 신호 레벨 등을 규정</li>\n<li>의미(Semantic) - 시스템 간의 정보 전송을 위한 제어 정보로 조정과 에러 처리를 위한 규정</li>\n<li>타이밍(Timing) - 시스템 간의 정보 전송을 위한 속도 조절과 순서 관리 규정</li>\n</ol>\n<p>(프로토콜은 <strong>복수의 컴퓨터 사이에서 데이터 통신을 원활하게 하기 위해 필요한 통신규약</strong>입니다. 대표적으로 흔히 사용되는 IP/TCP가 있습니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"xml-\" style=\"position:relative;\"><a href=\"#xml-\" aria-label=\"xml  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>XML :</h4>\n<p>송.수신 시스템 간 데이터 연계의 필요성을 위해서 전송되는 데이터 구조를 동일한 형태로 정의</p>\n<br/>\r\n<br/>\n<h4 id=\"json-\" style=\"position:relative;\"><a href=\"#json-\" aria-label=\"json  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON :</h4>\n<p>비동기 브라우저 . 서버 통신(AJAX)을 위해 ‘속성-값 쌍’, ‘키-값 쌍’으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷</p>\n<br/>\r\n<br/>\n<h4 id=\"비선점형-스케줄링-알고리즘-유형-\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%84%A0%EC%A0%90%ED%98%95-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9C%A0%ED%98%95-\" aria-label=\"비선점형 스케줄링 알고리즘 유형  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비선점형 스케줄링 알고리즘 유형 :</h4>\n<ul>\n<li><strong>우선순위(Priority)</strong> - 프로세스별로 우선순위가 주어지고, 우선순위에 따라 CPU를 할당</li>\n<li><strong>기한부(Deadline)</strong> - 작업들이 명시된 시간이나 기한 내에 완료되도록 계획</li>\n<li><strong>FCFS(First Come First Service)</strong> - 프로세스가 대기 큐에 도착한 순서에 따라 CPU를 할당</li>\n<li><strong>SJF(Shortest Job First)</strong> - 프로세스가 도착하는 시점에 따라 그 당시 가장 작은 서비스 기간을 갖는 프로세스가 종료까지 원 점유</li>\n<li><strong>HRN(Highest Response Ratio Next)</strong> - 대기 중인 프로세스 중 현재 응답률이 가장 높은 것을 선택<br>\n(대기시간 + 서비스 시간) / 서비스 시간\r\n<br/>\r\n(비선점형이란 <strong>하나의 프로세스가 끝나지 않으면 다른 프로세스는 CPU를 사용할 수 없다</strong>란 뜻입니다.)</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"선점형-스케줄링-알고리즘-유형-\" style=\"position:relative;\"><a href=\"#%EC%84%A0%EC%A0%90%ED%98%95-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9C%A0%ED%98%95-\" aria-label=\"선점형 스케줄링 알고리즘 유형  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선점형 스케줄링 알고리즘 유형 :</h4>\n<ul>\n<li><strong>RR(Round Robin)</strong> - 시분할 시스템에서 사용 / FCFS와 비슷하지만 제한시간이 지난 후, 다음 프로세스에게 자원을 할당</li>\n<li><strong>SRT(Shortest Remaining Time)</strong> - SJF기법을 선점형으로 바꾼 스케줄링</li>\n<li><strong>선점 우선순위</strong> - 비선점 우선순위를 선점형으로 바꾼 것</li>\n<li><strong>다단계 큐</strong> - 프로세스의 우선순위에 따라 시스템 프로세스, 대화형 프로세스, 일괄처리 프로세스 등으올 나누어 준비상태 큐를 상위 중위 하위 단계로 배치</li>\n<li><strong>다단계 피드백 큐</strong> - 다단계 큐의 단점을 보완함 / 큐마다 timeout을 설정하여 timeout 초과시 우선순위가 낮은 다음단계 큐로 이동</li>\n</ul>\n<p>(선점형이란 <strong>하나의 프로세스가 다른 프로세스 대신에 프로세서(CPU)를 차지할 수 있다</strong>란 뜻입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"트랜잭션-특성-\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%ED%8A%B9%EC%84%B1-\" aria-label=\"트랜잭션 특성  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트랜잭션 특성 :</h4>\n<ul>\n<li><strong>원자성(Atomicity)</strong> : 분해가 불가능한 작업의 최소 단위</li>\n<li><strong>일관성(Consistency)</strong> : 트랜잭션이 실행 성공 후 항상 일관된 데이터베이스 상태를 보존해야 하는 특성</li>\n<li><strong>격리성(Isolation)</strong> : 트랜잭션 실행 중 생성하는 연산의 중간 결과를 다른 트랜잭션이 접근 불가한 특성</li>\n<li><strong>영속성(Durability)</strong> : 성공이 완료된 트랜잭션의 결과는 영구적으로 데이터베이스에 저장하는 특성</li>\n</ul>\n<p>(트랜잭션이란 데이터베이스의 상태를 변화시키는 하나의 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 일련의 연산을 의미합니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"tcltransaction-control-language의-명령어-\" style=\"position:relative;\"><a href=\"#tcltransaction-control-language%EC%9D%98-%EB%AA%85%EB%A0%B9%EC%96%B4-\" aria-label=\"tcltransaction control language의 명령어  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TCL(Transaction Control Language)의 명령어 :</h4>\n<ul>\n<li><strong>커밋</strong> - 트랜잭션 확정, 트랜잭션을 메모리에 영구적으로 저장하는 명령어</li>\n<li><strong>롤백</strong> - 트랜잭션 취소, 트랜잭션 내역을 저장 무효화 시키는 명령어</li>\n<li><strong>체크 포인트</strong> - 저장 시기 설정 롤백을 위한 시점을 지정하는 명령어</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"랜드-어택\" style=\"position:relative;\"><a href=\"#%EB%9E%9C%EB%93%9C-%EC%96%B4%ED%83%9D\" aria-label=\"랜드 어택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>랜드 어택:</h4>\n<p>출발지(Source) IP와 목적지(Destination) IP를 같은 패킷 주소로 만들어 보냄으로써 수신자가 자기 자신에게 응답을 보내게 하여 시스템의 가용성을 침해하는 공격 기법이다.</p>\n<br/>\r\n<br/>\n<h4 id=\"해시-암호화-알고리즘-종류-\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EC%8B%9C-%EC%95%94%ED%98%B8%ED%99%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%A2%85%EB%A5%98-\" aria-label=\"해시 암호화 알고리즘 종류  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해시 암호화 알고리즘 종류 :</h4>\n<ul>\n<li><strong>MD5(Message-Digest algorithm 5)</strong> - 각각의 512bit짜리 입력 메세지 블록에 대해 차례로 동작하여 128bit의 해시값을 생성하는 해시 알고리즘</li>\n<li><strong>SHA-1(Secure Hash algorithm)</strong> - 160bit의 해시값을 생성하는 해시 알고리즘</li>\n<li><strong>SHA-256/384/512(Secure Hash algorithm)</strong> - SHA 알고리즘의 한 종류로써 256bit의 해시값을 생성하는 해시 함수</li>\n<li><strong>HAS-160</strong> - 국내 표준 서명 알고리즘 KCDSA를 위하여 개발된 해시 함수</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"결합도의-유형-\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%ED%95%A9%EB%8F%84%EC%9D%98-%EC%9C%A0%ED%98%95-\" aria-label=\"결합도의 유형  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결합도의 유형 :</h4>\n<ul>\n<li><strong>내용 결합도(Content Coupling)</strong> - 모듈 내부에 있는 변수나 기능을 다른 모듈에서 사용하는 다른 모듈에서 사용하는 경우의 결합도</li>\n<li><strong>공통 결합도(Common Coupling)</strong> - 파라미터가 아닌 모듈 밖에 선언되어 있는 전역 변수를 참조하고, 전역 변수를 갱신하는 식으로 상호작용하는 경우의 결합도</li>\n<li><strong>외부 결합도(External Coupling)</strong> - 두 개의 모듈이 외부에서 도입된 데이터 포맷, 통신 프로토콜 또는 디바이스 인터페이스를 공유할 경우의 결합도</li>\n<li><strong>제어 결합도(Control Coupling)</strong> - 단순 처리할 대상인 값만 전달되는 게 아니라 어떻게 처리를 해야 한다는 제어 요소가 전달되는 경우의 결합도</li>\n<li><strong>스탬프 결합도(Stamp Coupling)</strong> - 모듈 간의 인터페이스로 배열이나 객체, 구조등이 전달되는 경우의 결합도</li>\n<li><strong>자료 결합도(Data Coupling)</strong> - 모듈간의 인터페이스로 전달되는 파라미터를 통해서만 모듈간의 상호작용이 일어나는 경우의 결합도</li>\n</ul>\n<p><U>결합도 높음(낮음 품질)에서 결합도 낮음(높음 품질)의 순서</U></p>\n<p>내용 결합도 - 공통 결합도 - 외부 결합도 - 제어 결합도 - 스탬프 결합도 - 자료 결합도<br>\n(결합도란 다른 모듈과의 의존성 정도)</p>\n<br/>\r\n<br/>\n<h4 id=\"응집도의-유형-\" style=\"position:relative;\"><a href=\"#%EC%9D%91%EC%A7%91%EB%8F%84%EC%9D%98-%EC%9C%A0%ED%98%95-\" aria-label=\"응집도의 유형  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>응집도의 유형 :</h4>\n<ul>\n<li><strong>우연적 응집도(Coincidental Cohesion)</strong> - 모듈 내부의 각 구성요소가 연관이 없을 경우의 응집도</li>\n<li><strong>논리적 응집도(Logical Cohesion)</strong> - 유사한 성격을 갖거나 특정 형태로 분류되는 처리 요소들이 한 모듈에서 처리되는 경우의 응집도</li>\n<li><strong>시간적 응집도(Temporal Cohesion)</strong> - 연관된 기능이라기보다는 특정 시간에 처리되어야 하는 활동들을 한 모듈에서 처리할 경우의 응집도</li>\n<li><strong>절차적 응집도(Procedural Cohesion)</strong> - 모듈 다수의 관련 기능을 가질 때 모듈 안의 구성요소들이 그 기능을 순차적으로 수행할 경우의 응집도</li>\n<li><strong>교환적 응집도(Communication Cohesion)</strong> - 동일한 입력과 출력을 사용하여 다른 기능을 수행하는 활동들이 모여있을 경우의 응집도</li>\n<li><strong>순차적 응집도(Sequential Cohesion)</strong> - 모듈 내에서 한 활동으로부터 나온 출력값을 다른 활동이 사용할 경우의 응집도</li>\n<li><strong>기능적 응집도(Functional Cohesion)</strong> - 모듈 내부의 모든 기능이 단일한 목적을 위해 수행되는 경우의 응집도</li>\n</ul>\n<p><U>응집도 높음(낮음 품질)에서 응집도 낮음(높음 품질)의 순서</U></p>\n<p>우연적 응집도 - 논리적 응집도 - 시간적 응집도 - 절차적 응집도 - 교환적 응집도 - 순차적 응집도 - 기능적 응집도<br>\n(응집도는 <strong>모듈에 포함된 내부 요소들이 하나의 책임 / 목적을 위해 연결되어 있는 연관된 정도</strong>입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"릴리즈-노트의-주요-작성-항목-\" style=\"position:relative;\"><a href=\"#%EB%A6%B4%EB%A6%AC%EC%A6%88-%EB%85%B8%ED%8A%B8%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9E%91%EC%84%B1-%ED%95%AD%EB%AA%A9-\" aria-label=\"릴리즈 노트의 주요 작성 항목  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>릴리즈 노트의 주요 작성 항목 :</h4>\n<ul>\n<li><strong>헤더</strong> - 문서이름, 제품이름, 버전번호, 릴리즈 날짜, 참고 날짜, 노트 버전 등의 정보</li>\n<li><strong>개요</strong> - 제품 및 변경에 대한 간략한 전반적 개요</li>\n<li><strong>목적</strong> - 릴리스 버전의 새로운 기능 목록과 릴리즈 노트의 목적에 대한 개요, 버그 수정 및 새로운 기능 기술</li>\n<li><strong>이슈 요약</strong> - 버그의 간단한 설명 또는 릴리즈 추가 항목 요약</li>\n<li><strong>재현 항목</strong> - 버그 발견에 따른 재현 단계 기술</li>\n<li><strong>수정.개선 내용</strong> - 수정.개선의 간단한 설명 기술</li>\n<li><strong>사용자 영향도</strong> - 버전 변경에 따른 최종 사용자 기준의 기능 및 응용 프로그램상의 영향도 기술</li>\n<li><strong>소프트웨어 지원 영향도</strong> - 버전 변경에 따른 소프트웨어의 지원 프로세스 및 영향도 기술</li>\n<li><strong>노트</strong> - 소프트웨어 및 하드웨어 설치 항목, 제품 문서를 포함한 업그레이드 항목 메모</li>\n<li><strong>면책 조항</strong> - 회사 및 표준 제품과 관련된 메세지, 프리웨어 및 불법 복제 방지, 중복 등 참조에 대한 고지사항</li>\n<li><strong>연락 정보</strong> 사용자 지원 및 문의에 관련한 연락처 정보</li>\n</ul>\n<p>(릴리스 노트는 소프트웨어 제품과 함께 배포되는 문서들을 말합니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"반정규화의-주요-기법-\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EC%A0%95%EA%B7%9C%ED%99%94%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%B2%95-\" aria-label=\"반정규화의 주요 기법  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반정규화의 주요 기법 :</h4>\n<ul>\n<li><strong>테이블 병합</strong> - 1:1 관계, 1:M 관계를 통합하여 조인 횟루를 줄여 성능을 향상</li>\n<li><strong>테이블 분할</strong> - 테이블을 수직 또는 수평으로 분할하는 것으로 파티셔닝이라고 함</li>\n<li><strong>중복 테이블 추가</strong> - 대량의 데이터들에 대한 집계 함수(group by, sum 등)를 사용하여 실시간 통계 정보를 계산하는 경우에 효과적인 수행을 위해 별도의 통계 테이블을 두거나 중복 테이블을 추가</li>\n<li><strong>컬럼 중복화</strong> - 조인 성능 향상을 위해 중복 허용</li>\n<li><strong>중복 관계 추가</strong> - 데이터를 처리하기 위한 여러 경로를 거쳐 조인이 가능하지만, 이 때 발생할 수 있는 성능 저하를 예방하기 위해 추가적 관계를 맺는 방법</li>\n</ul>\n<p>(반정규화란 <strong>시스템의 성능 향상, 개발 및 운영의 편의성 등을 위해 정규화된 데이터 모델을 통합, 중복, 분리하는 과정으로 의도적으로 정규화 원칙을 위배하는 행위</strong>입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"osi-7계층의-특징-\" style=\"position:relative;\"><a href=\"#osi-7%EA%B3%84%EC%B8%B5%EC%9D%98-%ED%8A%B9%EC%A7%95-\" aria-label=\"osi 7계층의 특징  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OSI 7계층의 특징 :</h4>\n<ul>\n<li><strong>응용 계층(Application Layer)</strong> - 사용자와 네트워크 간 응용서비스 연결, 데이터 생성</li>\n<li><strong>표현 계층(Presentation Layer)</strong> - 데이터 형식 설정, 부호교환, 암.복호화</li>\n<li><strong>세션 계층(Session Layer)</strong> - 송수신 간의 논리적 연결 / 연결 접속, 동기제어</li>\n<li><strong>전송 계층(Transport Layer)</strong> - 송수신 프로세스 간의 연결 / 신뢰성 있는 통신 보장 / 데이터 분할, 재조립, 흐름제어, 오류 제어, 혼잡 제어</li>\n<li><strong>네트워크 계층(Network Layer)</strong> - 단말기 간 데이터를 전송하기 위한 최적화된 경로 제공</li>\n<li><strong>데이터링크 계층(Datalink Layer)</strong> - 인접 시스템 간 데이터 전송, 전송 오류 제어 / 동기화, 오류 제어, 흐름 제어, 회선 제어</li>\n<li><strong>물리 계층(Physical Layer)</strong> - 0과 1의 비트 정보를 회선에 보내기 위한 전기적 신호 변환</li>\n</ul>\n<p>(OSI 7계층이란 <strong>국제 표준화 기구인 ISO에서 개발한 컴퓨터 네트웍스 프로토콜 디자인과 통신을 계층으로 나누어 설명한 개방형 시스템 상호 연결 모델</strong>입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"애플리케이션-성능-측정-지표-\" style=\"position:relative;\"><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%B1%EB%8A%A5-%EC%B8%A1%EC%A0%95-%EC%A7%80%ED%91%9C-\" aria-label=\"애플리케이션 성능 측정 지표  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애플리케이션 성능 측정 지표 :</h4>\n<ul>\n<li><strong>처리량(Throughput)</strong> - 애플리케이션이 주어진 시간에 처리할 수 있는 트랜잭션의 수</li>\n<li><strong>응답 시간(Response Time)</strong> - 사용자 입력이 끝난 후, 애플리케이션의 응답 출력이 개시될 때 까지의 시간</li>\n<li><strong>경과 시간(Turnaround Time)</strong> - 애플리케이션에 사용자가 요구를 입력한 시점부터 트랜잭션을 처리 후 그 결과의 출력이 완료할 때 까지 걸리는 시간</li>\n<li><strong>자원 사용률(Resource Usage)</strong> - 애플리케이션이 트랜잭션을 처리하는 동안 사용하는 CPU 사용량, 메모리 사용량, 네트워크 사용량</li>\n</ul>\n<p>(사용자가 요구한 애플리케이션의 기능을 <strong>최소환의 자원을 사용해서 최대한 많은 기능을 어느 정도 처리하는지</strong>를 말합니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"비즈니스-연속성-계획bcp의-주요-용어-\" style=\"position:relative;\"><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EC%97%B0%EC%86%8D%EC%84%B1-%EA%B3%84%ED%9A%8Dbcp%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9A%A9%EC%96%B4-\" aria-label=\"비즈니스 연속성 계획bcp의 주요 용어  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비즈니스 연속성 계획(BCP)의 주요 용어 :</h4>\n<ul>\n<li><strong>BIA(Business Impact Analysis)</strong> - 장애나 재해로 인해 운영상의 주요 손실을 볼 것을 가정하여 시간 흐름에 따른 영향도 및 손실 평가를 조사하는 BCP를 구축하기 위한 비즈니스 영향 분석</li>\n<li><strong>RTO(Recovery Time Objective)</strong> - 업무 중단 시점부터 업무가 복구되어 다시 가동될 때까지의 시간</li>\n<li><strong>RPO(Recovery Point Objective)</strong> - 업무 중단 시점부터 데이터가 복구되어 다시 정상가동될 때 데이터의 손실 허용 시점</li>\n<li><strong>DRP(Disaster Recovery Plan)</strong> - 재난으로 장기간에 걸쳐 시설의 운영이 불가능한 경우를 대비한 재난 복구 계획</li>\n<li><strong>DRS(Disasger Recovery System)</strong> - 재해복구계획의 원활한 수행을 지원하기 위하여 평상시에 확보하여 두는 인적, 물적 자원 및 이들에 대한 지속적인 관리 체계가 통합된 재해복구 센터</li>\n</ul>\n<p>(비즈니스 연속성 계획(BCP)이란 <strong>각종 재해나 재난발생에 대비하여 핵심 업무 기능 수행의 연속성을 유지</strong>하여 고객서비스의 지속성 보장과 고객에 대한 신뢰도를 높이는 신속한 절차와 체계를 구축해 기업의 가치를 최대화 해주는 방법론)</p>\n<br/>\r\n<br/>\n<h4 id=\"ajaxasynchronous-javascript-and-xml-비동기-통신-기법-\" style=\"position:relative;\"><a href=\"#ajaxasynchronous-javascript-and-xml-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%86%B5%EC%8B%A0-%EA%B8%B0%EB%B2%95-\" aria-label=\"ajaxasynchronous javascript and xml 비동기 통신 기법  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AJAX(Asynchronous JavaScript and XML) 비동기 통신 기법 :</h4>\n<ul>\n<li>브라우저가 가지고 있는 XMLHttpRequest 객체를 이용해서 전체 페이지를 새로 고치지 않고도 페이지 일부만을 위한 데이터를 로드하는 기법</li>\n<li>하이퍼텍스트 표기 언어(HTML)만으로 어려운 다양한 작업을 웹 페이지에서 구현해 이용자가 웹 페이지와 자유롭게 상호작용할 수 있도록 하는 기술</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"소프트웨어-개발방법론-종류-\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0-%EC%A2%85%EB%A5%98-\" aria-label=\"소프트웨어 개발방법론 종류  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어 개발방법론 종류 :</h4>\n<ul>\n<li><strong>구조적 방법론(Structured Development)</strong> - 전체 시스템을 기능에 따라 나누어 개발하고, 이를 통합하는 분할과 정복 접근 방식의 방법론</li>\n<li><strong>정보공학 방법론(Information Engineering Development)</strong> - 정보시스템 개발에 필요한 관리 절차와 작업 기반을 체계화한 방법론</li>\n<li><strong>객체지향 방법론(Object-Oriented Development)</strong> - ‘객체’라는 기본 단위로 시스템을 분석 및 설계하는 방법론</li>\n<li><strong>컴포넌트 기반 방법론(CBD : Component Based Development)</strong> - 소프트웨어를 구성하는 컴포넌트를 조립해서 하나의 새로운 응용 프로그램을 작성하는 방법론</li>\n<li><strong>애자일 방법론(Agile Development)</strong> - 절차보다는 사람이 중심이 되어 변화에 유연하고 신속하게 적용하면서 효율적으로 시스템을 개발할 수 있는 신속 적응적 경량 개발방법론</li>\n<li><strong>제품 계열 방법론(Product Line Development)</strong> - 특정 제품에 적용하고 싶은 공통된 기능을 정의하여 개발하는 방법론</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"ipsec의-주요-프로토콜-\" style=\"position:relative;\"><a href=\"#ipsec%EC%9D%98-%EC%A3%BC%EC%9A%94-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-\" aria-label=\"ipsec의 주요 프로토콜  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPSec의 주요 프로토콜 :</h4>\n<ul>\n<li><strong>인증(AH) 프로토콜</strong> - 메세지 인증 코드(MAC)을 이용하여 인증과 송신처 인증을 제공해주는 프로토콜로 기밀성(암호화)은 제공하지 않는 프로토콜</li>\n<li><strong>암호화(ESP) 프로토콜</strong> - 메세지 인증 코드(MAC)와 암호화를 이용하여 인증과 송신처 인증과 기밀성을 제공하는 프로토콜</li>\n<li><strong>키 관리(IKE) 프로토콜</strong> - Key를 주고 받는 알고리즘 / 공개된 네트워크를 통하여 Key를 어떻게 할 것인가를 정의</li>\n</ul>\n<p>(IPSec은 IP계층(3계층)에서 무결성과 인증을 보장하는 인증 헤더(AH)와 기밀성을 보장하는 암호화(ESP)를 이용한 IP 보안 프로토콜입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"디자인-패턴-중-행위-패턴-\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4-%EC%A4%91-%ED%96%89%EC%9C%84-%ED%8C%A8%ED%84%B4-\" aria-label=\"디자인 패턴 중 행위 패턴  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인 패턴 중 행위 패턴 :</h4>\n<ul>\n<li><strong>Mediator</strong> - 객체지향 설계에서 객체 수가 많아지면 서로 간 통신을 위해 복잡해져서 객체지향에서 가장 중요한 느슨한 결합의 특성을 해칠 수 있기에 중간에서 이를 통제하고 지시할 수 있는 역할의 중재자를 두고, 중재자에게 모든 것을 요구하여 통신의 빈도를 줄여 객체지향의 목표를 달성하게 해줌</li>\n<li><strong>Interpreter</strong> - 언어의 다양한 해석, 구체적으로 구문을 나누고, 그 분리된 구문의 해석을 맡는 클래스를 각각 작성하여 여러 형태의 언어 구문을 해석할 수 있게 만듬</li>\n<li><strong>Iterator</strong> - 컬렉션 구현 방법을 노출시키지 않으면서도 그 집합체 안에 들어가 있는 모든 항목에 접근할 방법을 제공</li>\n<li><strong>Template Method</strong> - 어떤 작업을 처리하는 일부분을 서브 클래스로 캡슐화 해 전체 일을 수행하는 구조는 바꾸지 않으면서 특정 단계에서 수행하는 내역을 바꿈</li>\n<li><strong>Observer</strong> - 한 객체의 상태가 바뀌면 그 객체에 의존하는 다른 객체들에 연락이 가고 자동으로 내용이 갱신되는 방법</li>\n<li><strong>State</strong> - 객체 상태를 캡슐화하여 클래스화함으로써 그것을 참조하게 하는 방식</li>\n<li><strong>Visitor</strong> - 각 클래스 데이터 구조로부터 처리기능을 분리하여 별도의 클래스를 만들어 놓고 해당 클래스의 메서드가 각 클래스를 돌아다니며 특정 작업을 수행하도록 만듬</li>\n<li><strong>Command</strong> - 실행될 기능을 캡슐화함으로써 주어진 여러 기능을 실행할 수 있는 재사용이 높은 클래스를 설계</li>\n<li><strong>Strategy</strong> - 알고리즘 군을 정의하고(추상 클래스) 같은 알고리즘을 각각 하나의 클래스로 캡슐화한 다음, 필요할 때 서로 교환해서 사용할 수 있게 하는 패턴</li>\n<li><strong>Memento</strong> - 클래스 설계 관점에서 객체의 정보를 저장할 필요가 있을 때 적용하는 디자인 패턴</li>\n<li><strong>Chain of Responsibility</strong> - 정적으로 어떤 기능에 대한 처리의 연결이 하드 코딩되어 있을 때 기능 처리의 연결 변경이 불가능한데, 이를 동적으로 연결된 경우에 따라 다르게 처리될 수 있도록 연결한 디자인 패턴</li>\n</ul>\n<p>(디자인 패턴이란 소프트웨어를 설계할 때 특정 맥락에서 자주 발생하는 고질적인 문제들이 또 발생했을 때 재사용할 수 있는 훌륭한 해결책을 말합니다. 디자인 패턴에는 생성패턴 / 구조패턴 / 행위패턴이 있습니다.</p>\n<p>생성패턴 - 객체 생성에 관련된 패턴<br>\n구조패턴 - 클래스나 객체를 조합해 더 큰 구조를 만드는 패턴<br>\n행위패턴 - 객체나 클래스 사이의 알고리즘이나 책임 분배에 관련된 패턴)</p>\n<br/>\r\n<br/>\n<h4 id=\"안드로이드의-특징-\" style=\"position:relative;\"><a href=\"#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%9D%98-%ED%8A%B9%EC%A7%95-\" aria-label=\"안드로이드의 특징  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>안드로이드의 특징 :</h4>\n<ul>\n<li><strong>리눅스 기반</strong> - 안드로이드는 리눅스 커널 위에서 작동</li>\n<li><strong>자바와 코틀린 언어</strong> - 고수준 언어를 사용해 응용 프로그램을 작성</li>\n<li><strong>런타임 라이브러리</strong> - 컴파일된 바이트 코드 구동 기능</li>\n<li><strong>안드로이드 소프트웨어 개발</strong> - 응용프로그램을 개발하는데 필요한 각종 도구와 API를 제공</li>\n</ul>\n<p>(안드로이드는 구글에서 개발한 운영체제로 리눅스 위에서 구동하며, 휴대폰 전화를 비롯한 휴대용 장치를 위한 운영체제와 미들웨어, 사용자 인터페이스 그리고 표준 응용 프로그램(웹 브라우저 등) 등을 포함하고 있는 소프트웨어 스택이자 리눅스 모바일 운영체제입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"soapsimple-object-access-protocol-\" style=\"position:relative;\"><a href=\"#soapsimple-object-access-protocol-\" aria-label=\"soapsimple object access protocol  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SOAP(Simple Object Access Protocol) :</h4>\n<p>SOAP는 HTTP, HTTPS, SMTP 등을 사용하여 XML 기반의 메세지를 네트워크 상태에서 교환하는 프로토콜</p>\n<br/>\r\n<br/>\n<h4 id=\"입력-데이터-검증-및-표현에-대한-취약점-\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B2%80%EC%A6%9D-%EB%B0%8F-%ED%91%9C%ED%98%84%EC%97%90-%EB%8C%80%ED%95%9C-%EC%B7%A8%EC%95%BD%EC%A0%90-\" aria-label=\"입력 데이터 검증 및 표현에 대한 취약점  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력 데이터 검증 및 표현에 대한 취약점 :</h4>\n<ul>\n<li><strong>XSS(Cross Site Script)</strong> - 검증되지 않은 외부 입력 데이터가 포함된 웹 페이지가 전송되는 경우, 사용자가 해당 웹 페이지를 열람함으로써 웹페이지에 포함된 부적절한 스크립트가 실행되는 공격</li>\n<li><strong>사이트 간 요청 위조(CSRF)</strong> - 사용자가 자신의 의지와는 무관하게 공격자가 의도한 행위를 특정 웹 사이트에 요청하게 하는 공격</li>\n<li><strong>SQL 삽입(Injection)</strong> - 응용 프로그램의 보안 취약점을 이용해서 악의적인 SQL 구문을 삽입, 실행시켜서 데이터베이스의 접근을 통해 정보를 탈취하거나 조작 등을 행위하는 공격 기법</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"ui-설계-원칙-\" style=\"position:relative;\"><a href=\"#ui-%EC%84%A4%EA%B3%84-%EC%9B%90%EC%B9%99-\" aria-label=\"ui 설계 원칙  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>UI 설계 원칙 :</h4>\n<ul>\n<li><strong>직관성(Intuitiveness)</strong> - 누구나 쉽게 이해하고, 쉽게 사용할 수 있어야함</li>\n<li><strong>유효성(Efficiency)</strong> - 정확하고 완벽하게 사용자의 목표가 달성될 수 있도록 제작</li>\n<li><strong>학습성(Learnability)</strong> - 초보와 숙련자 모두가 쉽게 배우고 사용할 수 있게 제작</li>\n<li><strong>유연성(Flexibility)</strong> - 사용자의 인터렉션을 최대한 포용하고, 실수를 방지할 수 있도록 제작</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"lodlinked-open-data-\" style=\"position:relative;\"><a href=\"#lodlinked-open-data-\" aria-label=\"lodlinked open data  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LOD(Linked Open Data) :</h4>\n<p>웹상에 존재하는 데이터를 개별 URI(Uniform Resource Identifier)로 식별하과 각 URI에 링크정보를 부여함으로써 상호 연결된 웹을 지향하는 데이터</p>\n<br/>\r\n<br/>\n<h4 id=\"데이터-모델링의-절차-\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81%EC%9D%98-%EC%A0%88%EC%B0%A8-\" aria-label=\"데이터 모델링의 절차  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터 모델링의 절차 :</h4>\n<ul>\n<li><strong>개념적 데이터 모델(Conceptual Data Modeling)</strong> - 현실 세계에 대한 인식을 추상적, 개념적으로 표현하여 개념적 구조를 도출하는 데이터 모델</li>\n<li><strong>논리적 데이터 모델(Logical Data Modeling)</strong> - 업무의 모습을 모델링 표기법으로 형상화하여 사람이 이해하기 쉽게 표현한 데이터 모델</li>\n<li><strong>물리적 모델(Physical Data Modeling)</strong> - 논리 데이터 모델을 특정 DBMS의 특성 및 성능을 고려하여 물리적인 스키마를 만드는 일련의 모델</li>\n</ul>\n<p>(데이터 모델링의 구성요소는 개체(Entity)-속성(Attribute)-관계(Relation)입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"형상관리의-절차-\" style=\"position:relative;\"><a href=\"#%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EC%9D%98-%EC%A0%88%EC%B0%A8-\" aria-label=\"형상관리의 절차  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형상관리의 절차 :</h4>\n<ul>\n<li><strong>형상 식별</strong> - 형상 관리 대상을 정의 및 식별하는 활동</li>\n<li><strong>형상 통제</strong> - 형상 항목의 버전 관리를 위한 형상 통제 위원회 운영</li>\n<li><strong>형상 감사</strong> - 소프트웨어 베이스라인의 무결성 평가</li>\n<li><strong>형상 기록</strong> - 소프트웨어 형상 및 변경관리에 대한 각종 수행결과를 기록</li>\n</ul>\n<p>(형상 관리는 소프트웨어 개발을 위한 전체 과정에서 발생하는 모든 항목의 변경사항을 관리하기 위한 활동입니다.)</p>\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\n<h3 id=\"출처--httpschoboparktistorycom193\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98--httpschoboparktistorycom193\" aria-label=\"출처  httpschoboparktistorycom193 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처 : <a href=\"https://chobopark.tistory.com/193\">https://chobopark.tistory.com/193</a></h3>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%82%B4%EC%B6%A9%EC%A0%9C-%ED%8C%A8%EB%9F%AC%EB%8F%85%EC%8A%A4-\">살충제 패러독스 :</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%A7%88%EC%9D%B4%EB%8B%9D-\">데이터 마이닝 :</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%9D%98-3%EC%9A%94%EC%86%8C-\">프로토콜의 3요소 :</a></li>\n<li><a href=\"#xml-\">XML :</a></li>\n<li><a href=\"#json-\">JSON :</a></li>\n<li><a href=\"#%EB%B9%84%EC%84%A0%EC%A0%90%ED%98%95-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9C%A0%ED%98%95-\">비선점형 스케줄링 알고리즘 유형 :</a></li>\n<li><a href=\"#%EC%84%A0%EC%A0%90%ED%98%95-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%9C%A0%ED%98%95-\">선점형 스케줄링 알고리즘 유형 :</a></li>\n<li><a href=\"#%ED%8A%B8%EB%9E%9C%EC%9E%AD%EC%85%98-%ED%8A%B9%EC%84%B1-\">트랜잭션 특성 :</a></li>\n<li><a href=\"#tcltransaction-control-language%EC%9D%98-%EB%AA%85%EB%A0%B9%EC%96%B4-\">TCL(Transaction Control Language)의 명령어 :</a></li>\n<li><a href=\"#%EB%9E%9C%EB%93%9C-%EC%96%B4%ED%83%9D\">랜드 어택:</a></li>\n<li><a href=\"#%ED%95%B4%EC%8B%9C-%EC%95%94%ED%98%B8%ED%99%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%A2%85%EB%A5%98-\">해시 암호화 알고리즘 종류 :</a></li>\n<li><a href=\"#%EA%B2%B0%ED%95%A9%EB%8F%84%EC%9D%98-%EC%9C%A0%ED%98%95-\">결합도의 유형 :</a></li>\n<li><a href=\"#%EC%9D%91%EC%A7%91%EB%8F%84%EC%9D%98-%EC%9C%A0%ED%98%95-\">응집도의 유형 :</a></li>\n<li><a href=\"#%EB%A6%B4%EB%A6%AC%EC%A6%88-%EB%85%B8%ED%8A%B8%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9E%91%EC%84%B1-%ED%95%AD%EB%AA%A9-\">릴리즈 노트의 주요 작성 항목 :</a></li>\n<li><a href=\"#%EB%B0%98%EC%A0%95%EA%B7%9C%ED%99%94%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%B2%95-\">반정규화의 주요 기법 :</a></li>\n<li><a href=\"#osi-7%EA%B3%84%EC%B8%B5%EC%9D%98-%ED%8A%B9%EC%A7%95-\">OSI 7계층의 특징 :</a></li>\n<li><a href=\"#%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%84%B1%EB%8A%A5-%EC%B8%A1%EC%A0%95-%EC%A7%80%ED%91%9C-\">애플리케이션 성능 측정 지표 :</a></li>\n<li><a href=\"#%EB%B9%84%EC%A6%88%EB%8B%88%EC%8A%A4-%EC%97%B0%EC%86%8D%EC%84%B1-%EA%B3%84%ED%9A%8Dbcp%EC%9D%98-%EC%A3%BC%EC%9A%94-%EC%9A%A9%EC%96%B4-\">비즈니스 연속성 계획(BCP)의 주요 용어 :</a></li>\n<li><a href=\"#ajaxasynchronous-javascript-and-xml-%EB%B9%84%EB%8F%99%EA%B8%B0-%ED%86%B5%EC%8B%A0-%EA%B8%B0%EB%B2%95-\">AJAX(Asynchronous JavaScript and XML) 비동기 통신 기법 :</a></li>\n<li><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0-%EC%A2%85%EB%A5%98-\">소프트웨어 개발방법론 종류 :</a></li>\n<li><a href=\"#ipsec%EC%9D%98-%EC%A3%BC%EC%9A%94-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-\">IPSec의 주요 프로토콜 :</a></li>\n<li><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4-%EC%A4%91-%ED%96%89%EC%9C%84-%ED%8C%A8%ED%84%B4-\">디자인 패턴 중 행위 패턴 :</a></li>\n<li><a href=\"#%EC%95%88%EB%93%9C%EB%A1%9C%EC%9D%B4%EB%93%9C%EC%9D%98-%ED%8A%B9%EC%A7%95-\">안드로이드의 특징 :</a></li>\n<li><a href=\"#soapsimple-object-access-protocol-\">SOAP(Simple Object Access Protocol) :</a></li>\n<li><a href=\"#%EC%9E%85%EB%A0%A5-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EA%B2%80%EC%A6%9D-%EB%B0%8F-%ED%91%9C%ED%98%84%EC%97%90-%EB%8C%80%ED%95%9C-%EC%B7%A8%EC%95%BD%EC%A0%90-\">입력 데이터 검증 및 표현에 대한 취약점 :</a></li>\n<li><a href=\"#ui-%EC%84%A4%EA%B3%84-%EC%9B%90%EC%B9%99-\">UI 설계 원칙 :</a></li>\n<li><a href=\"#lodlinked-open-data-\">LOD(Linked Open Data) :</a></li>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81%EC%9D%98-%EC%A0%88%EC%B0%A8-\">데이터 모델링의 절차 :</a></li>\n<li><a href=\"#%ED%98%95%EC%83%81%EA%B4%80%EB%A6%AC%EC%9D%98-%EC%A0%88%EC%B0%A8-\">형상관리의 절차 :</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98--httpschoboparktistorycom193\">출처 : https://chobopark.tistory.com/193</a></p>\n</li>\n</ul>\n</div>","excerpt":"살충제 패러독스 : 동일한 테스트 케이스에 의한 반복적 테스트는 새로운 버그를 찾지 못한다는 테스트의 원리 데이터 마이닝 : 대규모로 저장된 데이터 안에서 체계적이고 자동적으로 통계적 규칙이나 패턴을 찾아내는 기술 프로토콜의 3요소 : 구문(Syntax) - 시스템 간의 정보 전송을 위한 데이터 형식, 코딩, 신호 레벨 등을 규정 의미(Semantic) - 시스템 간의 정보 전송을 위한 제어 정보로 조정과 에러 처리를 위한 규정 타이밍(Timing) - 시스템 간의 정보 전송을 위한 속도 조절과 순서 관리 규정 (프로토콜은 복수의 컴퓨터 사이에서 데이터 통신을 원활하게 하기 위해 필요한 통신규약입니다. 대표적으로 흔히 사용되는 IP/TCP가 있습니다.) XML : 송.수신 시스템 간 데이터 연계의 필요성을 위해서 전송되는 데이터 구조를 동일한 형태로 정의 JSON : 비동기 브라우저 . 서버 통신(AJAX)을 위해 ‘속성-값 쌍’, ‘키-값 쌍’으로 이루어진 데이터 오브젝트를 전달…","frontmatter":{"date":"July 16, 2023","title":"정보처리기사 실기 족보 1탄 공부","categories":"자격증","author":"하이영","emoji":"🌍"},"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-01/"}},"next":{"id":"0575b4f0-aabd-53d1-b4c2-77cb0ff24cb6","html":"<h1 id=\"백준-2206-벽-부수고-이동하기\" style=\"position:relative;\"><a href=\"#%EB%B0%B1%EC%A4%80-2206-%EB%B2%BD-%EB%B6%80%EC%88%98%EA%B3%A0-%EC%9D%B4%EB%8F%99%ED%95%98%EA%B8%B0\" aria-label=\"백준 2206 벽 부수고 이동하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>백준 2206, 벽 부수고 이동하기</h1>\n<br/>\n<h2 id=\"문제-푸는데-필요한-정보\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\" aria-label=\"문제 푸는데 필요한 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 정보</h2>\n<ul>\n<li>N X M 행렬로 표현되는 맵이 주어짐\n<ul>\n<li>0은 이동할 수 있는 곳, 1은 이동할 수 없는 곳</li>\n</ul>\n</li>\n<li>(1, 1)에서 (N, M)의 위치까지 최단 경로로 이동해야함\n<ul>\n<li>최단 경로는 맵에서 가장 적은 개수의 칸을 지나는 경로를 말함</li>\n<li>이 때 시작하는 칸과 끝나는 칸도 포함해서 세야함</li>\n</ul>\n</li>\n<li>이동 도중 벽을 부수고 이동하는 것이 좀 더 경로가 짧아진다면, 한 개까지 부수고 이동해도 됌</li>\n<li>한 칸에서 이동할 수 있는 칸은 상하좌우로 인접한 칸</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"문제-푸는데-필요한-알고리즘\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\" aria-label=\"문제 푸는데 필요한 알고리즘 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 푸는데 필요한 알고리즘</h2>\n<ul>\n<li>전체적인 풀이법은 BFS를 통한 최단 경로를 구해내는 것과 유사하다.</li>\n<li>하지만 이동 도중 벽을 한번 부술 수 있다는 것이 차이점</li>\n<li>방문 처리의 경우에도 단순한 2차원 배열로는 불가능하다</li>\n<li>한 지역이라도 벽을 부수고 온 경우와 벽을 부수지 않고 온 경우가 존재하기 때문\n<ul>\n<li>따라서 3차원 배열로 구현 ( 1일 때는 아직 부수지 않음, 0일 때는 이미 부수고 옴)</li>\n</ul>\n</li>\n<li>현재 위치에서 이동할 수 있는 경우의 수는 총 3가지이다.\n<ol>\n<li>벽을 부수지 않았으며 이동하려는 위치가 벽이며 방문처리가 안 된 경우</li>\n<li>벽을 부수지 않았으며 이동하려는 위치가 벽이 아니며 방문처리가 안 된 경우</li>\n<li>벽을 이미 부쉈으며 이동하려는 위치가 벽이 아니며 방분처리가 안 된 경우</li>\n</ol>\n</li>\n<li>위의 경우에 대해 방문 처리를 진행하며 BFS를 돌리면 문제가 해결 된다.</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"실수한-내용-및-고찰\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\" aria-label=\"실수한 내용 및 고찰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수한 내용 및 고찰</h2>\n<ul>\n<li>1, 2번에 대해 방문처리 코드를 작성하지 않았다가 메모리 초과 오류가 발생했다.</li>\n<li>1년 전에 풀었던 문제지만 사소하게나마 메모리와 시간이 개선되었다.</li>\n</ul>\n<br/>\r\n<br/>\n<h2 id=\"코드\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C\" aria-label=\"코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">input</span> <span class=\"token operator\">=</span> sys<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">.</span>readline\r\n\r\nN<span class=\"token punctuation\">,</span> M <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\nqueue <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nvisited <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token boolean\">False</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\nqueue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nvisited<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\nvisited<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\ndx <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\ndy <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">while</span> queue<span class=\"token punctuation\">:</span>\r\n    x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> depth<span class=\"token punctuation\">,</span> cnt <span class=\"token operator\">=</span> queue<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> N<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> y <span class=\"token operator\">==</span> M<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>depth<span class=\"token punctuation\">)</span>\r\n        exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        new_x <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> dx<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\r\n        new_y <span class=\"token operator\">=</span> y <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\r\n        <span class=\"token keyword\">if</span> new_x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> new_x <span class=\"token operator\">>=</span> N <span class=\"token keyword\">or</span> new_y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> new_y <span class=\"token operator\">>=</span> M<span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">continue</span>\r\n        <span class=\"token keyword\">if</span> cnt <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">if</span> Map<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> visited<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n                visited<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\n                queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>new_x<span class=\"token punctuation\">,</span> new_y<span class=\"token punctuation\">,</span> depth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> Map<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> <span class=\"token keyword\">not</span> visited<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n                visited<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\n                queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>new_x<span class=\"token punctuation\">,</span> new_y<span class=\"token punctuation\">,</span> depth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n            <span class=\"token keyword\">if</span> Map<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> visited<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">or</span> visited<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n                <span class=\"token keyword\">continue</span>\r\n            queue<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>new_x<span class=\"token punctuation\">,</span> new_y<span class=\"token punctuation\">,</span> depth<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            visited<span class=\"token punctuation\">[</span>new_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>new_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%A0%95%EB%B3%B4\">문제 푸는데 필요한 정보</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%91%B8%EB%8A%94%EB%8D%B0-%ED%95%84%EC%9A%94%ED%95%9C-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98\">문제 푸는데 필요한 알고리즘</a></li>\n<li><a href=\"#%EC%8B%A4%EC%88%98%ED%95%9C-%EB%82%B4%EC%9A%A9-%EB%B0%8F-%EA%B3%A0%EC%B0%B0\">실수한 내용 및 고찰</a></li>\n<li><a href=\"#%EC%BD%94%EB%93%9C\">코드</a></li>\n</ul>\n</div>","frontmatter":{"date":"July 15, 2023","title":"백준 2206, 벽 부수고 이동하기","categories":"알고리즘","author":"하이영","emoji":"🔮"},"fields":{"slug":"/Algorithm/BackJoon/01.2206/"}},"prev":{"id":"35f6d9da-5379-55c0-a192-1908bd1e6298","html":"<h4 id=\"리팩토링의-목적-\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81%EC%9D%98-%EB%AA%A9%EC%A0%81-\" aria-label=\"리팩토링의 목적  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리팩토링의 목적 :</h4>\n<ul>\n<li><strong>유지보수성 향상</strong> - 복잡한 코드의 단순화, 소스의 가독성 향상</li>\n<li><strong>유연한 시스템</strong> - 소프트웨어 요구사항 변경에 유연한 대응</li>\n<li><strong>생산성 향상</strong> - 정제 및 최적화된 소스의 재사용</li>\n<li><strong>품질 향상</strong> - 소프트웨어 오류발견이 용이하여 품질향상</li>\n</ul>\n<p>(리팩토링은 소프트웨어 모듈의 외부적 기능은 수정하지 않고 내부적으로 구조, 관계 등을 단순화하여 소프트웨어의 유지보수성을 향상시키는 기법입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"ospf의-특징-\" style=\"position:relative;\"><a href=\"#ospf%EC%9D%98-%ED%8A%B9%EC%A7%95-\" aria-label=\"ospf의 특징  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OSPF의 특징 :</h4>\n<ul>\n<li><strong>다익스트라 알고리즘 사용</strong> - 다익스트라 알고리즘을 사용하는 내부 라우팅 프로토콜</li>\n<li><strong>라우팅 메트릭 지정</strong> - 최조, 지연, 최대 처리량 등 관리자가 라우팅 메트릭 지정</li>\n<li><strong>AS분할 사용</strong> - 자치 시스템을 지역으로나누어 라투잉을 효과적으로 관리</li>\n<li><strong>홉 카운트 무제한</strong> - 홉 카운트에 제한이 없음</li>\n</ul>\n<p>(OSPF(Open Shortest Path First)는 대표적인 내부 라우팅 프로토콜로 다익스트라 알고리즘을 이용한 대규모 네트워크에 적합한 링크 상태 라우팅 프로토콜로도 불리는 라우팅 프로토콜입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"icmp-\" style=\"position:relative;\"><a href=\"#icmp-\" aria-label=\"icmp  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ICMP :</h4>\n<p>IP 패킷을 처리할 때 발생하는 문제를 알려주는 프로토콜로, 메시지 형식은 8비트의 헤더와 가변 길이의 데이터 영역으로 분리되어 있음</p>\n<br/>\r\n<br/>\n<h4 id=\"식별자-표기법-\" style=\"position:relative;\"><a href=\"#%EC%8B%9D%EB%B3%84%EC%9E%90-%ED%91%9C%EA%B8%B0%EB%B2%95-\" aria-label=\"식별자 표기법  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>식별자 표기법 :</h4>\n<ul>\n<li><strong>카멜 표기법</strong> - 식별자 표기 시에 여러 단어가 이어지면 첫 단어 시작만 소문자로 표시하고, 각 단어의 첫 글자는 대문자로 지정하는 표기법 (ex : goodMan)</li>\n<li><strong>파스칼 표기법</strong> - 식별자 표기 시에 여러 단어가 이어지면 각 단어의 첫 글자는 대문자로 지정하는 표기법 (ex : GoodMan)</li>\n<li><strong>스네이크 표기법</strong> - 식별자 표기 시에 여러 단어가 이어지면 단어 사이에 언더 바를 넣는 표기법 (ex : good_man)</li>\n<li><strong>헝가리안 표기법</strong> - 식별자 표기 시, 두어에 자료형을 붙이는 표기법 (ex : goodMan > 정수형)</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"블랙박스-테스트의-유형-\" style=\"position:relative;\"><a href=\"#%EB%B8%94%EB%9E%99%EB%B0%95%EC%8A%A4-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%9C%A0%ED%98%95-\" aria-label=\"블랙박스 테스트의 유형  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>블랙박스 테스트의 유형 :</h4>\n<ul>\n<li><strong>동등분할 테스트</strong> - 입력 데이터의 영역을 유사한 도메인 별로 유효 값/무효 값을 그룹핑하여 대푯값 테스트 케이스를 도출하여 테스트하는 기법</li>\n<li><strong>경곗값 분석 테스트</strong> - 등가 분할 후 경곗값 부분에서 오류 발생 확률이 높기 때문에 경곗값을 포함하여 테스트 케이스를 설계하여 테스트하는 기법</li>\n<li><strong>결정 테이블 테스트</strong> - 요구사항의 논리와 발생 조건을 테이블 형태로 나열하여 조건과 행위를 모두 조합하여 테스트하는 기법</li>\n<li><strong>상태 전이 테스트</strong> - 테스트 대상, 시스템이나 객체의 상태를 구분하고 이벤트에 의해 어느 한 상태에서 다른 상태로 전이 되는 경우의 수를 수행하는 테스트 기법</li>\n<li><strong>유스케이스 테스트</strong> - 시스템이 실제 사용되는 유스케이스로 모델링 되어있을 때 프로세스 흐름을 기반으로 테스트 케이스를 명세화하여 수행하는 테스트 기법</li>\n<li><strong>분류 트리 테스트</strong> - SW의 일부 또는 전체를 트리 구조로 분석 및 표현하여 테스트 케이스를 설계하여 테스트하는 기법</li>\n<li><strong>페어와이즈 테스트</strong> - 테스트 데이터 값 간에 최소한 한번씩 조합하는 방식</li>\n<li><strong>원인-결과 그래프 테스트</strong> - 그래프를 활용하여 입력 데이터 간의 관계 및 출력에 미치는 영향을 분석하여 효용성이 높은 테스트 케이스를 선정하여 테스트하는 기법</li>\n<li><strong>비교 테스트</strong> - 여러 버전의 프로그램에 같은 입력값을 넣어서 동일한 결과 데이터가 나오는지 비교해 보는 테스트 기법</li>\n</ul>\n<p>(블랙박스 테스트는 소프트웨어 검사 방법 중 하나로 어떤 소프트웨어를 내부 구조나 작동 원리를 모르는 상태에서 소프트웨어의 동작을 검사하는 방법입니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"eai의-구축-유형-\" style=\"position:relative;\"><a href=\"#eai%EC%9D%98-%EA%B5%AC%EC%B6%95-%EC%9C%A0%ED%98%95-\" aria-label=\"eai의 구축 유형  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>EAI의 구축 유형 :</h4>\n<ul>\n<li><strong>포인트 투 포인트</strong> - 가장 기초적인 애플리케이션 통합방법으로 1:1 단순 통합방법</li>\n<li><strong>허브 앤 스포크</strong> - 단일한 점점의 허브 시스템을 통하여 데이터를 전송하는 중앙 집중식 방식</li>\n<li><strong>메시지 버스</strong> - 애플리케이션 사이 미들웨어(버스)를 두어 연계하는 미들웨어 통합 방식</li>\n<li><strong>하이브리드</strong> - 그룹 내부는 허브앤 스포크 방식을 사용하고, 그룹 간에는 메세지 버스 방식을 사용하는 통합 방식</li>\n</ul>\n<p>(EAI(Enterprise Application Integration)란 기업 응용 프로그램의 구조적 통합 방안을 가리킵니다.)</p>\n<br/>\r\n<br/>\n<h4 id=\"ipv4-주소\" style=\"position:relative;\"><a href=\"#ipv4-%EC%A3%BC%EC%86%8C\" aria-label=\"ipv4 주소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv4 주소:</h4>\n<ul>\n<li>주소체계는 10진수로 총 12자리이며, 네 부분으로 나뉜다.</li>\n<li>각 부분은 0~255까지 3자리의 수로 표현된다.</li>\n<li>IPv4 주소는 32bit로 구성되어 있으며, 인터넷 사용자의 증가로 인해 주소 공간의 고갈로 128bit 주소체계를 갖는 IPv6가 등장하고 점점 확산되고 있다.</li>\n</ul>\n<br/>\n<h4 id=\"ipv6-주소-\" style=\"position:relative;\"><a href=\"#ipv6-%EC%A3%BC%EC%86%8C-\" aria-label=\"ipv6 주소  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>IPv6 주소 :</h4>\n<ul>\n<li>IPv4의 기존 32bit 주소 공간에서 벗어나, IPv6는 128bit 주소 공간을 제공하고, IPv6는 네트워크의 물리적 위치에 제한받지 않고 같은 주소를 유지한다.</li>\n</ul>\n<br/>\r\n<br/>\n<h4 id=\"디자인-패턴의-유형-\" style=\"position:relative;\"><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%9C%A0%ED%98%95-\" aria-label=\"디자인 패턴의 유형  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디자인 패턴의 유형 :</h4>\n<p><strong>목적</strong></p>\n<ol>\n<li>생성 - 객체 인스턴스 생성에 관여, 클래스 정의와 객체 생성 방식을 구조화, 캡슐화를 수행하는 패턴</li>\n<li>구조 - 더 큰 구조 형성 목적으로 클래스나 객체의 조합을 다루는 패턴</li>\n<li>행위 - 클래스나 객체들이 상호작용하는 방법과 역할 분담을 다루는 패턴</li>\n</ol>\n<p><strong>범위</strong></p>\n<ol>\n<li>클래스 - 클래스 간 관련성 / 컴파일 타임에 정적으로 결정</li>\n<li>객체 - 객체 간 관련성을 다루는 패턴 / 런타임에 동적으로 결정</li>\n</ol>\n<br/>\r\n<br/>\n<h4 id=\"네트워크-공격-기법-\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%B5%EA%B2%A9-%EA%B8%B0%EB%B2%95-\" aria-label=\"네트워크 공격 기법  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 공격 기법 :</h4>\n<ul>\n<li><strong>스니핑</strong> - 공격 대상에게 직접 공격하지 않고 데이터만 몰래 들여다 보는 수동적 공격 기법</li>\n<li><strong>네트워크 스캐너, 스피너</strong> - 네트워크 하드웨어 및 소프트웨어 구성의 취약점 파악을 위해 공격자가 취약점을 탐색하는 공격 도구</li>\n<li><strong>패스워드 크래킹</strong> - 사전 크래킹 공격, 무차별 크래킹 공격, 패스워드 하이브리드 공격, 레인보우 테이블 공격 활용</li>\n<li><strong>IP 스푸핑</strong> - 침입자가 인증된 컴퓨팅 시스템인 것처럼 속여서 타깃 시스템의 정보를 빼내기 위해서 본인의 패킷 헤더를 인증된 IP 어드레스로 위조하여 타잇에 전송하는 공격기법</li>\n<li><strong>ARP 스푸핑</strong> - 공격자가 특정 호스트의 MAC 주소를 자신의 MAC 주소로 위조한 ARP Reply를 만들어 희생자에게 지속적으로 전송하여 희생자의 ARP Cache Table에 특정 호스트의 MAC 정보를 공격자의 MAC 정보로 변경, 희생자로부터 특정 호스트로 나가는 패킷을 공격자가 스니핑 하는 공격 기법</li>\n<li><strong>ICMP Redirect 공격</strong> - 3계층에서 스니핑 시스템을 네트워크에 존재하는 또 다른 라우터라고 알림으로써 패킷의 흐름을 바꾸는 공격 기법</li>\n<li><strong>트로이 목마</strong> - 악성 루틴이 숨어 있는 프로그램으로 겉보기에는 정상적인 프로그램으로 보이지만 실행하면 악성 코드를 실행하는 프로그램</li>\n</ul>\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\r\n<br/>\n<h3 id=\"출처--httpschoboparktistorycom193\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EC%B2%98--httpschoboparktistorycom193\" aria-label=\"출처  httpschoboparktistorycom193 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출처 : <a href=\"https://chobopark.tistory.com/193\">https://chobopark.tistory.com/193</a></h3>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EB%A6%AC%ED%8C%A9%ED%86%A0%EB%A7%81%EC%9D%98-%EB%AA%A9%EC%A0%81-\">리팩토링의 목적 :</a></li>\n<li><a href=\"#ospf%EC%9D%98-%ED%8A%B9%EC%A7%95-\">OSPF의 특징 :</a></li>\n<li><a href=\"#icmp-\">ICMP :</a></li>\n<li><a href=\"#%EC%8B%9D%EB%B3%84%EC%9E%90-%ED%91%9C%EA%B8%B0%EB%B2%95-\">식별자 표기법 :</a></li>\n<li><a href=\"#%EB%B8%94%EB%9E%99%EB%B0%95%EC%8A%A4-%ED%85%8C%EC%8A%A4%ED%8A%B8%EC%9D%98-%EC%9C%A0%ED%98%95-\">블랙박스 테스트의 유형 :</a></li>\n<li><a href=\"#eai%EC%9D%98-%EA%B5%AC%EC%B6%95-%EC%9C%A0%ED%98%95-\">EAI의 구축 유형 :</a></li>\n<li><a href=\"#ipv4-%EC%A3%BC%EC%86%8C\">IPv4 주소:</a></li>\n<li><a href=\"#ipv6-%EC%A3%BC%EC%86%8C-\">IPv6 주소 :</a></li>\n<li><a href=\"#%EB%94%94%EC%9E%90%EC%9D%B8-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%9C%A0%ED%98%95-\">디자인 패턴의 유형 :</a></li>\n<li><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B3%B5%EA%B2%A9-%EA%B8%B0%EB%B2%95-\">네트워크 공격 기법 :</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B6%9C%EC%B2%98--httpschoboparktistorycom193\">출처 : https://chobopark.tistory.com/193</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 17, 2023","title":"정보처리기사 실기 족보 2탄 공부","categories":"자격증","author":"하이영","emoji":"🌍"},"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-02/"}},"site":{"siteMetadata":{"siteUrl":"https://bnk159hair.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/certificate/Engineer-Information_Processing/Practice-01/","nextSlug":"/Algorithm/BackJoon/01.2206/","prevSlug":"/certificate/Engineer-Information_Processing/Practice-02/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}