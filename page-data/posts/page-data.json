{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts",
    "result": {"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"a3dde2e4-e95c-54cc-a723-cf771c3436c8","excerpt":"젠킨스를 도커 컨테이너로 실행 후 사이트가 제대로 뜨지 않아 어떻게 해결해야할지 모르고 있었던 중\r\n임시?적인 해결법을 찾았다. 에러  해결방법 아래의 주소로 접속 그리고 본인의 도메인을 입력","fields":{"slug":"/Tips/SSAFY/chrome-(ERR_SSL_PROTOCOL_ERROR)/"},"frontmatter":{"categories":"개발공부","title":"chrome ERR_SSL_PROTOCOL_ERROR","date":"July 30, 2023"}},"next":{"fields":{"slug":"/Tips/SSAFY/openvidu-deployment-test/"}},"previous":null},{"node":{"id":"bfa90154-d274-5b20-b2c1-310c4db09bb7","excerpt":"개요 SSAFY 2학기에 접어들면서 저 포함 6명의\r\n팀원이 함께 공통프로젝트를 진행하게 되었습니다. 공통프로젝트는 WebRTC를 이용한 프로젝트를 진행하게 되는데 제 개인 클라우드 서버(오라클)과 SSAFY에서 지급한 EC2(AWS)에 WebRTC를 간단하게 사용할 수 있게 해주는 openvidu를 구축해보면서 경험한 여러 삽질과 제가 이해한 내용에 대해 정리해보려 합니다. WebRTC(Web Real-Time Communication)란 웹 브라우저가 서로 통신할 수 있도록 설계된 API 웹 브라우저 상에서는 어떠한 플러그인도 필요 없이 음성 채팅과 화상 채팅,\r\n데이터 교환까지도 가능하게 하는 기술 WebRTC 기술은 P2P(Peer-to-Peer) 통신에 최적화 Signaling RTCPeerConnection들이 적절하게 데이터를 교환할 수 있게 처리해주는 과정 이를 수행하는 서버 = 시그널 서버 전이중 통신을 지원하는 websocket으로 이를 구현하는 것이 가장 적합 …","fields":{"slug":"/Tips/SSAFY/openvidu-deployment-test/"},"frontmatter":{"categories":"개발공부","title":"Openvidu Deployment 구축 후기 (미작성)","date":"July 25, 2023"}},"next":{"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-03/"}},"previous":{"fields":{"slug":"/Tips/SSAFY/chrome-(ERR_SSL_PROTOCOL_ERROR)/"}}},{"node":{"id":"1d2342d1-c93c-55ad-a0f7-056f2f5cbd46","excerpt":"간단한 개념 및 요약본 프로토콜의 3요소 - 구문 / 의미 / 타이밍 선점형 스케줄링 알고리즘 유형 - 라운드 로빈 / SRT / 다단계 큐 / 다단계 피드백 큐 비선점형 스케줄링 알고리즘 유형 - 우선순위 / 기한부 / FCFS / SJF / HRN 트랜잭션 특성 - 원자성 / 일관성 / 격리성 / 영속성 해시 암호화 알고리즘의 종류 - MD5 / SHA-1 / SHA-256 / HAS-160 결합도 유형 순서(품질 낮음에서 높음으로) - 내용 > 공통 > 외부 > 제어 > 스템프 > 자료 응집도 유형 순서(품질 낮음에서 높음으로) - 우연적 > 논리적 > 시간적 > 절차적 > 통신적 > 순차적 > 기능적 반정규화의 주요 기법 - 테이블 병합 / 테이블 분할 / 중복 테이블 추가 / 컬럼 중복화 / 중복 관계 추가 OSI 7셰층의 특징 - 응용 계층 / 표현 계층 / 세션 계층 / 전송 계층 / 네트워크 계층 / 데이터링크 계층 / 물리 계층 애플리케이션 성능 측정 지표 - 처리…","fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-03/"},"frontmatter":{"categories":"자격증","title":"정보처리기사 실기 족보 3탄 공부","date":"July 20, 2023"}},"next":{"fields":{"slug":"/Tips/Network/check-port/"}},"previous":{"fields":{"slug":"/Tips/SSAFY/openvidu-deployment-test/"}}},{"node":{"id":"9aa04713-dd17-5ef3-94d3-30181f5e05cf","excerpt":"오라클 클라우드로 데이터베이스 서버를 구축하면서 포트번호 관련 이슈들이 있었는데 해당 사이트를 통해\r\n손쉽게 포트번호가 열려있는지 확인할 수 있다. 포트번호가 열려있는지 확인할 수 있는 사이트","fields":{"slug":"/Tips/Network/check-port/"},"frontmatter":{"categories":"개발정보","title":"포트가 열려있는지 확인할 수 있는 사이트","date":"July 19, 2023"}},"next":{"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-02/"}},"previous":{"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-03/"}}},{"node":{"id":"35f6d9da-5379-55c0-a192-1908bd1e6298","excerpt":"리팩토링의 목적 : 유지보수성 향상 - 복잡한 코드의 단순화, 소스의 가독성 향상 유연한 시스템 - 소프트웨어 요구사항 변경에 유연한 대응 생산성 향상 - 정제 및 최적화된 소스의 재사용 품질 향상 - 소프트웨어 오류발견이 용이하여 품질향상 (리팩토링은 소프트웨어 모듈의 외부적 기능은 수정하지 않고 내부적으로 구조, 관계 등을 단순화하여 소프트웨어의 유지보수성을 향상시키는 기법입니다.) OSPF의 특징 : 다익스트라 알고리즘 사용 - 다익스트라 알고리즘을 사용하는 내부 라우팅 프로토콜 라우팅 메트릭 지정 - 최조, 지연, 최대 처리량 등 관리자가 라우팅 메트릭 지정 AS분할 사용 - 자치 시스템을 지역으로나누어 라투잉을 효과적으로 관리 홉 카운트 무제한 - 홉 카운트에 제한이 없음 (OSPF(Open Shortest Path First)는 대표적인 내부 라우팅 프로토콜로 다익스트라 알고리즘을 이용한 대규모 네트워크에 적합한 링크 상태 라우팅 프로토콜로도 불리는 라우팅 프로토콜입니다…","fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-02/"},"frontmatter":{"categories":"자격증","title":"정보처리기사 실기 족보 2탄 공부","date":"July 17, 2023"}},"next":{"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-01/"}},"previous":{"fields":{"slug":"/Tips/Network/check-port/"}}},{"node":{"id":"dd771358-7b88-5d59-95ca-9bcefe0fa394","excerpt":"살충제 패러독스 : 동일한 테스트 케이스에 의한 반복적 테스트는 새로운 버그를 찾지 못한다는 테스트의 원리 데이터 마이닝 : 대규모로 저장된 데이터 안에서 체계적이고 자동적으로 통계적 규칙이나 패턴을 찾아내는 기술 프로토콜의 3요소 : 구문(Syntax) - 시스템 간의 정보 전송을 위한 데이터 형식, 코딩, 신호 레벨 등을 규정 의미(Semantic) - 시스템 간의 정보 전송을 위한 제어 정보로 조정과 에러 처리를 위한 규정 타이밍(Timing) - 시스템 간의 정보 전송을 위한 속도 조절과 순서 관리 규정 (프로토콜은 복수의 컴퓨터 사이에서 데이터 통신을 원활하게 하기 위해 필요한 통신규약입니다. 대표적으로 흔히 사용되는 IP/TCP가 있습니다.) XML : 송.수신 시스템 간 데이터 연계의 필요성을 위해서 전송되는 데이터 구조를 동일한 형태로 정의 JSON : 비동기 브라우저 . 서버 통신(AJAX)을 위해 ‘속성-값 쌍’, ‘키-값 쌍’으로 이루어진 데이터 오브젝트를 전달…","fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-01/"},"frontmatter":{"categories":"자격증","title":"정보처리기사 실기 족보 1탄 공부","date":"July 16, 2023"}},"next":{"fields":{"slug":"/Algorithm/BackJoon/01.2206/"}},"previous":{"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-02/"}}},{"node":{"id":"0575b4f0-aabd-53d1-b4c2-77cb0ff24cb6","excerpt":"백준 2206, 벽 부수고 이동하기 문제 푸는데 필요한 정보 N X M 행렬로 표현되는 맵이 주어짐 0은 이동할 수 있는 곳, 1은 이동할 수 없는 곳 (1, 1)에서 (N, M)의 위치까지 최단 경로로 이동해야함 최단 경로는 맵에서 가장 적은 개수의 칸을 지나는 경로를 말함 이 때 시작하는 칸과 끝나는 칸도 포함해서 세야함 이동 도중 벽을 부수고 이동하는 것이 좀 더 경로가 짧아진다면, 한 개까지 부수고 이동해도 됌 한 칸에서 이동할 수 있는 칸은 상하좌우로 인접한 칸 문제 푸는데 필요한 알고리즘 전체적인 풀이법은 BFS를 통한 최단 경로를 구해내는 것과 유사하다. 하지만 이동 도중 벽을 한번 부술 수 있다는 것이 차이점 방문 처리의 경우에도 단순한 2차원 배열로는 불가능하다 한 지역이라도 벽을 부수고 온 경우와 벽을 부수지 않고 온 경우가 존재하기 때문 따라서 3차원 배열로 구현 ( 1일 때는 아직 부수지 않음, 0일 때는 이미 부수고 옴) 현재 위치에서 이동할 수 있는 경우의…","fields":{"slug":"/Algorithm/BackJoon/01.2206/"},"frontmatter":{"categories":"알고리즘","title":"백준 2206, 벽 부수고 이동하기","date":"July 15, 2023"}},"next":{"fields":{"slug":"/gatsby-github-blog/"}},"previous":{"fields":{"slug":"/certificate/Engineer-Information_Processing/Practice-01/"}}},{"node":{"id":"87b7ce23-f4b4-50fb-813d-647458f73a0d","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","fields":{"slug":"/gatsby-github-blog/"},"frontmatter":{"categories":"블로그 featured","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"}},"next":{"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}},"previous":{"fields":{"slug":"/Algorithm/BackJoon/01.2206/"}}},{"node":{"id":"a0d64e1b-02f3-545d-8e1d-414240c038b2","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 를 사용하고 있는 Repository 생성과 Netlify에 배포를 동시…","fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"},"frontmatter":{"categories":"블로그 featured","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"}},"next":null,"previous":{"fields":{"slug":"/gatsby-github-blog/"}}}],"categories":["All","개발공부","자격증","개발정보","알고리즘","블로그","featured"]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}